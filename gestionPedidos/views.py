from django.shortcuts import render
from django.http import HttpResponse
from gestionPedidos.models import Articulos

# Create your views here.
def busqueda_productos(request):
    return render(request,"busqueda_productos.html")

def buscar(request):
    # mensaje="articulo buscado: %r" %request.GET["prd"]
   
   
   if request.GET["prd"]:
     
     producto=request.GET["prd"]
     if len(producto)>20:
         mensaje="Texto de busqeda demasiado largo"
     
     else:
         articulos=Articulos.objects.filter(nombre__icontains=producto)
         return render(request,"resultados_busqueda.html",{"articulos":articulos,"query":producto})
    #  mensaje="Articulo buscado: %r" %request.GET["prd"]
   else:
       mensaje="No has introducido nada"
   return HttpResponse(mensaje)
   

yes=0
def contacto(request):
    if request.method=="POST":
     entradas=request.POST["entra"]
     salidas=request.POST["salida"]
     libres=request.POST["libres"]
     grupos1=request.POST["grupo"].split(" ")
     grupos=grupos1[0]
     grupos1.pop(0)

    else:
        entradas=7
        salidas=24
        libres=""
        grupos=""
    

    if  entradas=="":
        entradas=7
    if  salidas=="":
        salidas=24
    if  libres=="":
        libres=""  
    if grupos=="":
        grupos=""
    

    resuht=obti(entradas,salidas,libres,grupos)
    primel=' '.join(resuht[0])
    resuht.pop(0)
    
    resuht1=[]
    x=[]
    for r in resuht:
      
      if r[0].isdigit():
        if len(x)==len(materias51):
          resuht1.append(x)
          x=[]

        x.append(r)
      if not r[0] .isdigit():
        # resuht1.append(x)
        resuht1.append([r])
        # x=[] 
    grui1=0    
    for i in resuht1:
      
      grui=[]
      if len(i)==len(materias51):

        for j in i:
          grui.append(j[0])
        grui1=grui
        for y in grupos1:
          if y not in grui:
            if i in resuht1:
             resuht1.remove(i)  


    resuht2=[]
    for u in range(len(resuht1)):
      for t in resuht1[u]:
        resuht2.append(t)
    

    resuht3=[]
    for r in range(len(resuht2)-2):
      y1=""
      y2=""
      
      y3=""      
      for y in resuht2[r]:
        y1=y1+y
      for y in resuht2[r+1]:
        y2=y2+y      
      for y in resuht2[r+2]:
        y3=y3+y
      if y1=="" and y3!="":
        resuht3.append(resuht2[r])
      if y1!="":
        if resuht2[r][0].find("Horas")!=-1:

         if len(grupos1)>=1:
           resuht3.append(resuht2[r][0:2])

         if len(grupos1)<1:
           resuht3.append(resuht2[r])           

        if resuht2[r][0].find("Horas")==-1:
           resuht3.append(resuht2[r])  

        
    

    lib={"entrada1":entradas,"entrada2":salidas,"entrada3":libres,"entrada4":grupos,"textoplano":resuht3,"numa":len
    (materias51),"texle":range(len(resuht)),"primer":primel,"gru":grui1}

   

    return render(request,"contacto.html",lib)


# def contacto1(request):
    
#     if request.method=="POST":
#      entradas=request.POST["entra"]
#      salidas=request.POST["salida"]
#      libres=request.POST["libres"]
#      grupos=request.POST["grupo"]
#     else:
#         entradas=7
#         salidas=24
#         libres=""
#         grupos=""
    

#     if  entradas=="":
#         entradas=7
#     if  salidas=="":
#         salidas=24
#     if  libres=="":
#         libres=""  
#     if grupos=="":
#         grupos=""
    
#     resuht=obti(entradas,salidas,libres,grupos)
#     primel=' '.join(resuht[0])
#     resuht.pop(0)

#     # for r in range(len(resuht)):
#     #   if resuht[r][0].isdigit():
#     #     if resuht[r] in 

#         #debo en resuht hacer otra lista que tenga por elementos los de resuht pero en grupos de 4 o el numero de materias, len(materias51), seleccionando solo los que empiezen en digito, despues lo mismo para resuht1 anterior lista y con ello comparar los que coincidan eliminar los que no de la nueva lista o creados con resuht y asi despues eliminar las sublistas y regresar una lista tipo resuht original  


#     global resuht1,yes,tex2
     
#     yes=1  

#     resuht1=resuht

    

#     if yes==1:
#       tex2="hola funciona boton"
    
    


#     lib={"entrada1":entradas,"entrada2":salidas,"entrada3":libres,"entrada4":grupos,"textoplano":resuht,"numa":len(materias51),"texle":range(len(resuht)),"primer":primel,"texto1":"texto que informa cambios","func":tex2}

#     # for i in range(len(resuht)):
#     #   lib[i]=resuht[i]

#     # lib['lenlis']=range(len(resuht))

#     return render(request,"contacto.html",lib)












# Aqui insertar el codigo de repl.it 

gruposbase={'8175': ('0', '7:300a10', '0', '7:300a10', '0', '0'), '8197': ('10a12', '0', '10a12', '0', '10a12', '0'), '8163': ('0', '0', '7a10', '0', '7a10', '0'), '8216': ('12a14', '0', '12a14', '0', '12a14', '0'), '8198': ('10a12', '0', '10a12', '0', '10a12', '0'), '8199': ('12a14', '0', '12a14', '0', '12a14', '0'), '8214': ('10a12', '0', '10a12', '0', '10a12', '0'), '8215': ('10a12', '0', '10a12', '0', '10a12', '0'), '8200': ('12a14', '0', '12a14', '0', '12a14', '0'), '8178': ('0', '10a12:30', '0', '10a12:30', '0', '0'), '8196': ('8a10', '0', '8a10', '0', '8a10', '0'), '8162': ('0', '7a10', '0', '7a10', '0', '0'), '8212': ('8a10', '0', '8a10', '0', '8a10', '0'), '8213': ('8a10', '0', '8a10', '0', '8a10', '0'), '8217': ('14a16', '0', '14a16', '0', '14a16', '0'), '8201': ('14a16', '0', '14a16', '0', '14a16', '0'), '8219': ('16a18', '0', '16a18', '0', '16a18', '0'), '8202': ('16a18', '0', '16a18', '0', '16a18', '0'), '8220': ('18a20', '0', '18a20', '0', '18a20', '0'), '8203': ('18a20', '0', '18a20', '0', '18a20', '0'), '8181': ('0', '12a14:30', '0', '12a14:30', '0', '0'), '8184': ('14a15', '14a15', '14a15', '14a15', '14a15', '0'), '8164': ('0', '11a14', '0', '11a14', '0', '0'), '8165': ('0', '11a14', '0', '11a14', '0', '0'), '8167': ('15a18', '0', '0', '0', '15a18', '0'), '8168': ('0', '15a18', '0', '15a18', '0', '0'), '8190': ('0', '15:300a18', '0', '15:300a18', '0', '0'), '8166': ('0', '11a14', '11a14', '0', '11a14', '0'), '8187': ('15a16', '15a16', '15a16', '15a16', '15a16', '0'), '8218': ('16a18', '16a18', '0', '16a18', '0', '0'), '8193': ('0', '0', '15:300a18', '0', '15:300a18', '0')}
matebasere={0: '8175', 1: '8178', 2: '8181', 3: '8184', 4: '8187', 5: '8190', 6: '8193', 7: '8196', 8: '8197', 9: '8198', 10: '8199', 11: '8200', 12: '8201', 13: '8202', 14: '8203', 15: '8162', 16: '8163', 17: '8164', 18: '8165', 19: '8166', 20: '8167', 21: '8168', 22: '8212', 23: '8213', 24: '8214', 25: '8215', 26: '8216', 27: '8217', 28: '8218', 29: '8219', 30: '8220'}
equal=[[[0, 8, 16, 26], [0, 9, 16, 26], [0, 10, 16, 24], [0, 10, 16, 25], [0, 11, 16, 24], [0, 11, 16, 25], [1, 7, 15, 24], [1, 7, 15, 25], [1, 8, 15, 22], [1, 8, 15, 23], [1, 8, 15, 26], [1, 8, 16, 26], [1, 9, 15, 22], [1, 9, 15, 23], [1, 9, 15, 26], [1, 9, 16, 26], [1, 10, 15, 24], [1, 10, 15, 25], [1, 10, 15, 27], [1, 10, 16, 24], [1, 10, 16, 25], [1, 11, 15, 24], [1, 11, 15, 25], [1, 11, 15, 27], [1, 11, 16, 24], [1, 11, 16, 25], [1, 12, 15, 26], [1, 12, 15, 29], [1, 13, 15, 27], [1, 13, 15, 30], [1, 14, 15, 29], [2, 8, 16, 26], [2, 9, 16, 26], [2, 10, 16, 24], [2, 10, 16, 25], [2, 11, 16, 24], [2, 11, 16, 25], [3, 8, 16, 26], [3, 8, 17, 26], [3, 8, 18, 26], [3, 8, 20, 26], [3, 8, 21, 26], [3, 9, 16, 26], [3, 9, 17, 26], [3, 9, 18, 26], [3, 9, 20, 26], [3, 9, 21, 26], [3, 10, 16, 24], [3, 10, 16, 25], [3, 10, 17, 24], [3, 10, 17, 25], [3, 10, 18, 24], [3, 10, 18, 25], [3, 10, 20, 24], [3, 10, 20, 25], [3, 10, 21, 24], [3, 10, 21, 25], [3, 11, 16, 24], [3, 11, 16, 25], [3, 11, 17, 24], [3, 11, 17, 25], [3, 11, 18, 24], [3, 11, 18, 25], [3, 11, 20, 24], [3, 11, 20, 25], [3, 11, 21, 24], [3, 11, 21, 25], [5, 8, 16, 26], [5, 9, 16, 26], [5, 10, 16, 24], [5, 10, 16, 25], [5, 11, 16, 24], [5, 11, 16, 25]], [[0, 12, 19, 29], [0, 13, 19, 27], [2, 7, 21, 24], [2, 7, 21, 25], [2, 8, 21, 22], [2, 8, 21, 23], [2, 8, 21, 26], [2, 9, 21, 22], [2, 9, 21, 23], [2, 9, 21, 26], [2, 10, 21, 24], [2, 10, 21, 25], [2, 10, 21, 27], [2, 11, 21, 24], [2, 11, 21, 25], [2, 11, 21, 27], [2, 12, 21, 26], [2, 12, 21, 29], [2, 13, 21, 27], [2, 13, 21, 30], [2, 14, 21, 29], [5, 12, 19, 29], [5, 13, 19, 27]], [[0, 7, 17, 24], [0, 7, 17, 25], [0, 7, 18, 24], [0, 7, 18, 25], [0, 8, 17, 22], [0, 8, 17, 23], [0, 8, 17, 26], [0, 8, 18, 22], [0, 8, 18, 23], [0, 8, 18, 26], [0, 8, 20, 26], [0, 9, 17, 22], [0, 9, 17, 23], [0, 9, 17, 26], [0, 9, 18, 22], [0, 9, 18, 23], [0, 9, 18, 26], [0, 9, 20, 26], [0, 10, 17, 24], [0, 10, 17, 25], [0, 10, 17, 27], [0, 10, 18, 24], [0, 10, 18, 25], [0, 10, 18, 27], [0, 10, 20, 24], [0, 10, 20, 25], [0, 11, 17, 24], [0, 11, 17, 25], [0, 11, 17, 27], [0, 11, 18, 24], [0, 11, 18, 25], [0, 11, 18, 27], [0, 11, 20, 24], [0, 11, 20, 25], [0, 12, 17, 26], [0, 12, 17, 29], [0, 12, 18, 26], [0, 12, 18, 29], [0, 13, 17, 27], [0, 13, 17, 30], [0, 13, 18, 27], [0, 13, 18, 30], [0, 14, 17, 29], [0, 14, 18, 29], [1, 8, 20, 26], [1, 9, 20, 26], [1, 10, 20, 24], [1, 10, 20, 25], [1, 11, 20, 24], [1, 11, 20, 25], [2, 8, 20, 26], [2, 9, 20, 26], [2, 10, 20, 24], [2, 10, 20, 25], [2, 11, 20, 24], [2, 11, 20, 25], [4, 13, 17, 30], [4, 13, 18, 30], [4, 14, 17, 29], [4, 14, 18, 29], [5, 8, 20, 26], [5, 9, 20, 26], [5, 10, 20, 24], [5, 10, 20, 25], [5, 11, 20, 24], [5, 11, 20, 25]], [[3, 10, 17, 28], [3, 10, 17, 29], [3, 10, 18, 28], [3, 10, 18, 29], [3, 10, 20, 30], [3, 10, 21, 29], [3, 11, 17, 28], [3, 11, 17, 29], [3, 11, 18, 28], [3, 11, 18, 29], [3, 11, 20, 30], [3, 11, 21, 29], [3, 13, 17, 26], [3, 13, 17, 30], [3, 13, 18, 26], [3, 13, 18, 30], [3, 13, 19, 30], [3, 13, 21, 26], [3, 13, 21, 30], [3, 14, 17, 29], [3, 14, 18, 29], [3, 14, 19, 29], [3, 14, 20, 26], [3, 14, 21, 29], [4, 8, 16, 26], [4, 9, 16, 26], [4, 10, 16, 24], [4, 10, 16, 25], [4, 11, 16, 24], [4, 11, 16, 25], [4, 13, 19, 30], [4, 14, 19, 29], [5, 7, 17, 24], [5, 7, 17, 25], [5, 7, 18, 24], [5, 7, 18, 25], [5, 8, 17, 22], [5, 8, 17, 23], [5, 8, 17, 26], [5, 8, 18, 22], [5, 8, 18, 23], [5, 8, 18, 26], [5, 9, 17, 22], [5, 9, 17, 23], [5, 9, 17, 26], [5, 9, 18, 22], [5, 9, 18, 23], [5, 9, 18, 26], [5, 10, 17, 24], [5, 10, 17, 25], [5, 10, 17, 27], [5, 10, 18, 24], [5, 10, 18, 25], [5, 10, 18, 27], [5, 11, 17, 24], [5, 11, 17, 25], [5, 11, 17, 27], [5, 11, 18, 24], [5, 11, 18, 25], [5, 11, 18, 27], [5, 12, 17, 26], [5, 12, 17, 29], [5, 12, 18, 26], [5, 12, 18, 29], [5, 13, 17, 27], [5, 13, 17, 30], [5, 13, 18, 27], [5, 13, 18, 30], [5, 14, 17, 29], [5, 14, 18, 29], [6, 8, 15, 26], [6, 8, 16, 26], [6, 8, 17, 26], [6, 8, 18, 26], [6, 8, 21, 26], [6, 9, 15, 26], [6, 9, 16, 26], [6, 9, 17, 26], [6, 9, 18, 26], [6, 9, 21, 26], [6, 10, 15, 24], [6, 10, 15, 25], [6, 10, 16, 24], [6, 10, 16, 25], [6, 10, 17, 24], [6, 10, 17, 25], [6, 10, 18, 24], [6, 10, 18, 25], [6, 10, 21, 24], [6, 10, 21, 25], [6, 11, 15, 24], [6, 11, 15, 25], [6, 11, 16, 24], [6, 11, 16, 25], [6, 11, 17, 24], [6, 11, 17, 25], [6, 11, 18, 24], [6, 11, 18, 25], [6, 11, 21, 24], [6, 11, 21, 25]], [[0, 10, 16, 27], [0, 11, 16, 27], [0, 12, 16, 26], [1, 10, 16, 27], [1, 11, 16, 27], [1, 12, 16, 26], [2, 7, 15, 24], [2, 7, 15, 25], [2, 8, 15, 22], [2, 8, 15, 23], [2, 8, 15, 26], [2, 9, 15, 22], [2, 9, 15, 23], [2, 9, 15, 26], [2, 10, 15, 24], [2, 10, 15, 25], [2, 10, 15, 27], [2, 10, 16, 27], [2, 11, 15, 24], [2, 11, 15, 25], [2, 11, 15, 27], [2, 11, 16, 27], [2, 12, 15, 26], [2, 12, 15, 29], [2, 12, 16, 26], [2, 13, 15, 27], [2, 13, 15, 30], [2, 14, 15, 29], [5, 10, 16, 27], [5, 11, 16, 27], [5, 12, 16, 26], [6, 14, 17, 28], [6, 14, 18, 28]], [[0, 13, 19, 30], [0, 14, 19, 29], [1, 7, 21, 24], [1, 7, 21, 25], [1, 8, 21, 22], [1, 8, 21, 23], [1, 8, 21, 26], [1, 9, 21, 22], [1, 9, 21, 23], [1, 9, 21, 26], [1, 10, 21, 24], [1, 10, 21, 25], [1, 10, 21, 27], [1, 11, 21, 24], [1, 11, 21, 25], [1, 11, 21, 27], [1, 12, 21, 26], [1, 12, 21, 29], [1, 13, 21, 27], [1, 13, 21, 30], [1, 14, 21, 29], [4, 8, 17, 26], [4, 8, 18, 26], [4, 9, 17, 26], [4, 9, 18, 26], [4, 10, 17, 24], [4, 10, 17, 25], [4, 10, 17, 28], [4, 10, 17, 29], [4, 10, 18, 24], [4, 10, 18, 25], [4, 10, 18, 28], [4, 10, 18, 29], [4, 11, 17, 24], [4, 11, 17, 25], [4, 11, 17, 28], [4, 11, 17, 29], [4, 11, 18, 24], [4, 11, 18, 25], [4, 11, 18, 28], [4, 11, 18, 29], [4, 13, 17, 26], [4, 13, 18, 26], [5, 13, 19, 30], [5, 14, 19, 29], [6, 14, 19, 28]], [[0, 7, 20, 24], [0, 7, 20, 25], [0, 8, 16, 27], [0, 8, 20, 22], [0, 8, 20, 23], [0, 9, 16, 27], [0, 9, 20, 22], [0, 9, 20, 23], [0, 10, 20, 30], [0, 11, 20, 30], [0, 12, 16, 24], [0, 12, 16, 25], [0, 12, 17, 28], [0, 12, 18, 28], [0, 14, 17, 28], [0, 14, 18, 28], [0, 14, 20, 26], [1, 7, 15, 26], [1, 7, 20, 24], [1, 7, 20, 25], [1, 8, 15, 27], [1, 8, 16, 27], [1, 8, 20, 22], [1, 8, 20, 23], [1, 9, 15, 27], [1, 9, 16, 27], [1, 9, 20, 22], [1, 9, 20, 23], [1, 10, 15, 22], [1, 10, 15, 23], [1, 10, 15, 29], [1, 10, 20, 30], [1, 11, 15, 22], [1, 11, 15, 23], [1, 11, 15, 29], [1, 11, 20, 30], [1, 12, 15, 24], [1, 12, 15, 25], [1, 12, 15, 30], [1, 12, 16, 24], [1, 12, 16, 25], [1, 13, 15, 26], [1, 14, 15, 27], [1, 14, 20, 26], [2, 7, 20, 24], [2, 7, 20, 25], [2, 8, 16, 27], [2, 8, 20, 22], [2, 8, 20, 23], [2, 9, 16, 27], [2, 9, 20, 22], [2, 9, 20, 23], [2, 10, 20, 30], [2, 11, 20, 30], [2, 12, 16, 24], [2, 12, 16, 25], [2, 14, 20, 26], [3, 7, 17, 24], [3, 7, 17, 25], [3, 7, 17, 26], [3, 7, 18, 24], [3, 7, 18, 25], [3, 7, 18, 26], [3, 7, 20, 24], [3, 7, 20, 25], [3, 7, 20, 26], [3, 7, 21, 24], [3, 7, 21, 25], [3, 7, 21, 26], [3, 8, 17, 22], [3, 8, 17, 23], [3, 8, 18, 22], [3, 8, 18, 23], [3, 8, 20, 22], [3, 8, 20, 23], [3, 8, 21, 22], [3, 8, 21, 23], [3, 9, 17, 22], [3, 9, 17, 23], [3, 9, 18, 22], [3, 9, 18, 23], [3, 9, 20, 22], [3, 9, 20, 23], [3, 9, 21, 22], [3, 9, 21, 23], [3, 10, 17, 22], [3, 10, 17, 23], [3, 10, 18, 22], [3, 10, 18, 23], [3, 10, 20, 22], [3, 10, 20, 23], [3, 10, 21, 22], [3, 10, 21, 23], [3, 11, 17, 22], [3, 11, 17, 23], [3, 11, 18, 22], [3, 11, 18, 23], [3, 11, 20, 22], [3, 11, 20, 23], [3, 11, 21, 22], [3, 11, 21, 23], [4, 14, 17, 28], [4, 14, 18, 28], [5, 7, 20, 24], [5, 7, 20, 25], [5, 8, 16, 27], [5, 8, 20, 22], [5, 8, 20, 23], [5, 9, 16, 27], [5, 9, 20, 22], [5, 9, 20, 23], [5, 10, 20, 30], [5, 11, 20, 30], [5, 12, 16, 24], [5, 12, 16, 25], [5, 14, 20, 26]], [[0, 7, 19, 27], [0, 12, 19, 22], [0, 12, 19, 23], [0, 12, 19, 30], [0, 14, 19, 27], [1, 12, 15, 28], [1, 14, 15, 28], [2, 7, 21, 26], [2, 8, 16, 28], [2, 8, 21, 27], [2, 9, 16, 28], [2, 9, 21, 27], [2, 10, 21, 22], [2, 10, 21, 23], [2, 10, 21, 29], [2, 11, 21, 22], [2, 11, 21, 23], [2, 11, 21, 29], [2, 12, 15, 28], [2, 12, 21, 24], [2, 12, 21, 25], [2, 12, 21, 30], [2, 13, 21, 26], [2, 14, 15, 28], [2, 14, 21, 27], [3, 10, 16, 28], [3, 10, 16, 29], [3, 11, 16, 28], [3, 11, 16, 29], [3, 13, 16, 26], [4, 10, 16, 28], [4, 10, 16, 29], [4, 11, 16, 28], [4, 11, 16, 29], [4, 13, 16, 26], [4, 14, 19, 28], [5, 7, 19, 27], [5, 12, 19, 22], [5, 12, 19, 23], [5, 12, 19, 30], [5, 14, 19, 27], [6, 7, 15, 24], [6, 7, 15, 25], [6, 7, 17, 24], [6, 7, 17, 25], [6, 7, 18, 24], [6, 7, 18, 25], [6, 7, 21, 24], [6, 7, 21, 25], [6, 8, 15, 22], [6, 8, 15, 23], [6, 8, 17, 22], [6, 8, 17, 23], [6, 8, 18, 22], [6, 8, 18, 23], [6, 8, 21, 22], [6, 8, 21, 23], [6, 9, 15, 22], [6, 9, 15, 23], [6, 9, 17, 22], [6, 9, 17, 23], [6, 9, 18, 22], [6, 9, 18, 23], [6, 9, 21, 22], [6, 9, 21, 23], [6, 10, 15, 30], [6, 10, 17, 30], [6, 10, 18, 30], [6, 10, 21, 30], [6, 11, 15, 30], [6, 11, 17, 30], [6, 11, 18, 30], [6, 11, 21, 30], [6, 14, 15, 26], [6, 14, 17, 26], [6, 14, 18, 26], [6, 14, 21, 26]], [[0, 7, 17, 26], [0, 7, 18, 26], [0, 7, 20, 26], [0, 8, 17, 27], [0, 8, 18, 27], [0, 9, 17, 27], [0, 9, 18, 27], [0, 10, 17, 22], [0, 10, 17, 23], [0, 10, 17, 28], [0, 10, 17, 29], [0, 10, 18, 22], [0, 10, 18, 23], [0, 10, 18, 28], [0, 10, 18, 29], [0, 10, 20, 22], [0, 10, 20, 23], [0, 11, 17, 22], [0, 11, 17, 23], [0, 11, 17, 28], [0, 11, 17, 29], [0, 11, 18, 22], [0, 11, 18, 23], [0, 11, 18, 28], [0, 11, 18, 29], [0, 11, 20, 22], [0, 11, 20, 23], [0, 12, 16, 29], [0, 12, 17, 24], [0, 12, 17, 25], [0, 12, 17, 30], [0, 12, 18, 24], [0, 12, 18, 25], [0, 12, 18, 30], [0, 13, 16, 27], [0, 13, 17, 26], [0, 13, 18, 26], [0, 14, 17, 27], [0, 14, 18, 27], [1, 7, 20, 26], [1, 10, 20, 22], [1, 10, 20, 23], [1, 11, 20, 22], [1, 11, 20, 23], [1, 12, 16, 29], [1, 13, 16, 27], [2, 7, 20, 26], [2, 10, 20, 22], [2, 10, 20, 23], [2, 11, 20, 22], [2, 11, 20, 23], [2, 12, 16, 29], [2, 13, 16, 27], [3, 8, 15, 26], [3, 9, 15, 26], [3, 10, 15, 24], [3, 10, 15, 25], [3, 11, 15, 24], [3, 11, 15, 25], [5, 7, 20, 26], [5, 10, 20, 22], [5, 10, 20, 23], [5, 11, 20, 22], [5, 11, 20, 23], [5, 12, 16, 29], [5, 13, 16, 27]], [[0, 12, 19, 28], [1, 10, 15, 28], [1, 11, 15, 28], [2, 10, 15, 28], [2, 10, 16, 28], [2, 11, 15, 28], [2, 11, 16, 28], [3, 7, 19, 28], [3, 7, 19, 29], [3, 8, 16, 28], [3, 8, 16, 29], [3, 8, 17, 28], [3, 8, 17, 29], [3, 8, 18, 28], [3, 8, 18, 29], [3, 8, 20, 30], [3, 8, 21, 29], [3, 9, 16, 28], [3, 9, 16, 29], [3, 9, 17, 28], [3, 9, 17, 29], [3, 9, 18, 28], [3, 9, 18, 29], [3, 9, 20, 30], [3, 9, 21, 29], [3, 10, 17, 30], [3, 10, 18, 30], [3, 10, 21, 30], [3, 11, 17, 30], [3, 11, 18, 30], [3, 11, 21, 30], [3, 13, 16, 24], [3, 13, 16, 25], [3, 13, 17, 24], [3, 13, 17, 25], [3, 13, 18, 24], [3, 13, 18, 25], [3, 13, 19, 22], [3, 13, 19, 23], [3, 13, 21, 24], [3, 13, 21, 25], [3, 14, 17, 26], [3, 14, 17, 28], [3, 14, 18, 26], [3, 14, 18, 28], [3, 14, 19, 28], [3, 14, 20, 24], [3, 14, 20, 25], [3, 14, 21, 26], [4, 8, 16, 28], [4, 8, 16, 29], [4, 9, 16, 28], [4, 9, 16, 29], [4, 13, 16, 24], [4, 13, 16, 25], [5, 7, 17, 26], [5, 7, 18, 26], [5, 8, 17, 27], [5, 8, 18, 27], [5, 9, 17, 27], [5, 9, 18, 27], [5, 10, 17, 22], [5, 10, 17, 23], [5, 10, 17, 29], [5, 10, 18, 22], [5, 10, 18, 23], [5, 10, 18, 29], [5, 11, 17, 22], [5, 11, 17, 23], [5, 11, 17, 29], [5, 11, 18, 22], [5, 11, 18, 23], [5, 11, 18, 29], [5, 12, 17, 24], [5, 12, 17, 25], [5, 12, 17, 30], [5, 12, 18, 24], [5, 12, 18, 25], [5, 12, 18, 30], [5, 13, 17, 26], [5, 13, 18, 26], [5, 14, 17, 27], [5, 14, 18, 27], [6, 7, 15, 26], [6, 7, 17, 26], [6, 7, 18, 26], [6, 7, 21, 26], [6, 10, 15, 22], [6, 10, 15, 23], [6, 10, 16, 28], [6, 10, 17, 22], [6, 10, 17, 23], [6, 10, 17, 28], [6, 10, 18, 22], [6, 10, 18, 23], [6, 10, 18, 28], [6, 10, 21, 22], [6, 10, 21, 23], [6, 11, 15, 22], [6, 11, 15, 23], [6, 11, 16, 28], [6, 11, 17, 22], [6, 11, 17, 23], [6, 11, 17, 28], [6, 11, 18, 22], [6, 11, 18, 23], [6, 11, 18, 28], [6, 11, 21, 22], [6, 11, 21, 23]], [[0, 7, 21, 24], [0, 7, 21, 25], [0, 8, 17, 28], [0, 8, 18, 28], [0, 8, 21, 22], [0, 8, 21, 23], [0, 8, 21, 26], [0, 9, 17, 28], [0, 9, 18, 28], [0, 9, 21, 22], [0, 9, 21, 23], [0, 9, 21, 26], [0, 10, 16, 29], [0, 10, 21, 24], [0, 10, 21, 25], [0, 10, 21, 27], [0, 11, 16, 29], [0, 11, 21, 24], [0, 11, 21, 25], [0, 11, 21, 27], [0, 12, 21, 26], [0, 12, 21, 29], [0, 13, 16, 26], [0, 13, 21, 27], [0, 13, 21, 30], [0, 14, 21, 29], [1, 10, 16, 29], [1, 11, 16, 29], [1, 13, 16, 26], [2, 7, 15, 26], [2, 8, 15, 27], [2, 9, 15, 27], [2, 10, 15, 22], [2, 10, 15, 23], [2, 10, 15, 29], [2, 10, 16, 29], [2, 11, 15, 22], [2, 11, 15, 23], [2, 11, 15, 29], [2, 11, 16, 29], [2, 12, 15, 24], [2, 12, 15, 25], [2, 12, 15, 30], [2, 13, 15, 26], [2, 13, 16, 26], [2, 14, 15, 27], [4, 7, 19, 28], [4, 7, 19, 29], [4, 13, 15, 30], [4, 13, 16, 30], [4, 13, 19, 22], [4, 13, 19, 23], [4, 14, 15, 29], [4, 14, 16, 29], [5, 10, 16, 29], [5, 11, 16, 29], [5, 13, 16, 26]], [[1, 7, 21, 26], [1, 8, 15, 28], [1, 8, 16, 28], [1, 8, 21, 27], [1, 9, 15, 28], [1, 9, 16, 28], [1, 9, 21, 27], [1, 10, 21, 22], [1, 10, 21, 23], [1, 10, 21, 29], [1, 11, 21, 22], [1, 11, 21, 23], [1, 11, 21, 29], [1, 12, 21, 24], [1, 12, 21, 25], [1, 12, 21, 30], [1, 13, 21, 26], [1, 14, 21, 27], [2, 8, 15, 28], [2, 9, 15, 28], [2, 12, 16, 28], [3, 10, 15, 28], [3, 10, 15, 29], [3, 11, 15, 28], [3, 11, 15, 29], [3, 13, 15, 26], [3, 13, 15, 30], [3, 13, 16, 30], [3, 14, 15, 29], [3, 14, 16, 29], [4, 7, 17, 24], [4, 7, 17, 25], [4, 7, 17, 26], [4, 7, 18, 24], [4, 7, 18, 25], [4, 7, 18, 26], [4, 8, 17, 22], [4, 8, 17, 23], [4, 8, 17, 28], [4, 8, 17, 29], [4, 8, 18, 22], [4, 8, 18, 23], [4, 8, 18, 28], [4, 8, 18, 29], [4, 9, 17, 22], [4, 9, 17, 23], [4, 9, 17, 28], [4, 9, 17, 29], [4, 9, 18, 22], [4, 9, 18, 23], [4, 9, 18, 28], [4, 9, 18, 29], [4, 10, 17, 22], [4, 10, 17, 23], [4, 10, 17, 30], [4, 10, 18, 22], [4, 10, 18, 23], [4, 10, 18, 30], [4, 11, 17, 22], [4, 11, 17, 23], [4, 11, 17, 30], [4, 11, 18, 22], [4, 11, 18, 23], [4, 11, 18, 30], [4, 13, 17, 24], [4, 13, 17, 25], [4, 13, 18, 24], [4, 13, 18, 25], [4, 14, 17, 26], [4, 14, 18, 26], [5, 7, 15, 24], [5, 7, 15, 25], [5, 8, 15, 22], [5, 8, 15, 23], [5, 8, 15, 26], [5, 9, 15, 22], [5, 9, 15, 23], [5, 9, 15, 26], [5, 10, 15, 24], [5, 10, 15, 25], [5, 10, 15, 27], [5, 11, 15, 24], [5, 11, 15, 25], [5, 11, 15, 27], [5, 12, 15, 26], [5, 12, 15, 29], [5, 13, 15, 27], [5, 13, 15, 30], [5, 14, 15, 29], [6, 8, 16, 28], [6, 9, 16, 28], [6, 10, 16, 30], [6, 11, 16, 30], [6, 14, 16, 26], [6, 14, 16, 28]], [[0, 7, 17, 28], [0, 7, 18, 28], [0, 8, 16, 29], [0, 8, 20, 30], [0, 9, 16, 29], [0, 9, 20, 30], [0, 13, 16, 24], [0, 13, 16, 25], [0, 13, 16, 30], [0, 14, 16, 29], [0, 14, 20, 24], [0, 14, 20, 25], [1, 7, 15, 27], [1, 8, 15, 29], [1, 8, 16, 29], [1, 8, 20, 30], [1, 9, 15, 29], [1, 9, 16, 29], [1, 9, 20, 30], [1, 10, 15, 30], [1, 11, 15, 30], [1, 12, 15, 22], [1, 12, 15, 23], [1, 13, 15, 24], [1, 13, 15, 25], [1, 13, 16, 24], [1, 13, 16, 25], [1, 13, 16, 30], [1, 14, 15, 26], [1, 14, 16, 29], [1, 14, 20, 24], [1, 14, 20, 25], [2, 8, 16, 29], [2, 8, 20, 30], [2, 9, 16, 29], [2, 9, 20, 30], [2, 13, 16, 24], [2, 13, 16, 25], [2, 13, 16, 30], [2, 14, 16, 29], [2, 14, 20, 24], [2, 14, 20, 25], [5, 8, 16, 29], [5, 8, 20, 30], [5, 9, 16, 29], [5, 9, 20, 30], [5, 13, 16, 24], [5, 13, 16, 25], [5, 13, 16, 30], [5, 14, 16, 29], [5, 14, 20, 24], [5, 14, 20, 25], [6, 14, 15, 28]], [[0, 7, 19, 29], [0, 13, 19, 22], [0, 13, 19, 23], [1, 7, 15, 28], [1, 10, 16, 28], [1, 11, 16, 28], [2, 7, 15, 28], [2, 7, 21, 27], [2, 8, 21, 29], [2, 9, 21, 29], [2, 10, 21, 30], [2, 11, 21, 30], [2, 12, 21, 22], [2, 12, 21, 23], [2, 13, 21, 24], [2, 13, 21, 25], [2, 14, 21, 26], [3, 10, 16, 30], [3, 11, 16, 30], [3, 14, 16, 26], [4, 8, 15, 26], [4, 9, 15, 26], [4, 10, 15, 24], [4, 10, 15, 25], [4, 10, 15, 28], [4, 10, 15, 29], [4, 10, 16, 30], [4, 11, 15, 24], [4, 11, 15, 25], [4, 11, 15, 28], [4, 11, 15, 29], [4, 11, 16, 30], [4, 13, 15, 26], [4, 14, 16, 26], [5, 7, 19, 29], [5, 13, 19, 22], [5, 13, 19, 23], [6, 7, 19, 28], [6, 7, 19, 30], [6, 8, 15, 30], [6, 8, 16, 30], [6, 8, 17, 30], [6, 8, 18, 30], [6, 8, 21, 30], [6, 9, 15, 30], [6, 9, 16, 30], [6, 9, 17, 30], [6, 9, 18, 30], [6, 9, 21, 30], [6, 14, 15, 24], [6, 14, 15, 25], [6, 14, 16, 24], [6, 14, 16, 25], [6, 14, 17, 24], [6, 14, 17, 25], [6, 14, 18, 24], [6, 14, 18, 25], [6, 14, 19, 22], [6, 14, 19, 23], [6, 14, 21, 24], [6, 14, 21, 25]], [[0, 7, 17, 27], [0, 7, 18, 27], [0, 8, 17, 29], [0, 8, 18, 29], [0, 9, 17, 29], [0, 9, 18, 29], [0, 10, 17, 30], [0, 10, 18, 30], [0, 11, 17, 30], [0, 11, 18, 30], [0, 12, 16, 30], [0, 12, 17, 22], [0, 12, 17, 23], [0, 12, 18, 22], [0, 12, 18, 23], [0, 13, 17, 24], [0, 13, 17, 25], [0, 13, 18, 24], [0, 13, 18, 25], [0, 14, 16, 27], [0, 14, 17, 26], [0, 14, 18, 26], [1, 12, 16, 30], [1, 14, 16, 27], [2, 12, 16, 30], [2, 14, 16, 27], [3, 7, 15, 24], [3, 7, 15, 25], [3, 7, 15, 26], [3, 8, 15, 22], [3, 8, 15, 23], [3, 9, 15, 22], [3, 9, 15, 23], [3, 10, 15, 22], [3, 10, 15, 23], [3, 11, 15, 22], [3, 11, 15, 23], [4, 14, 15, 28], [4, 14, 16, 28], [5, 12, 16, 30], [5, 14, 16, 27]], [[1, 12, 16, 28], [3, 7, 17, 28], [3, 7, 17, 29], [3, 7, 18, 28], [3, 7, 18, 29], [3, 7, 19, 30], [3, 7, 20, 30], [3, 7, 21, 29], [3, 8, 16, 30], [3, 8, 17, 30], [3, 8, 18, 30], [3, 8, 21, 30], [3, 9, 16, 30], [3, 9, 17, 30], [3, 9, 18, 30], [3, 9, 21, 30], [3, 13, 17, 22], [3, 13, 17, 23], [3, 13, 18, 22], [3, 13, 18, 23], [3, 13, 21, 22], [3, 13, 21, 23], [3, 14, 16, 24], [3, 14, 16, 25], [3, 14, 17, 24], [3, 14, 17, 25], [3, 14, 18, 24], [3, 14, 18, 25], [3, 14, 19, 22], [3, 14, 19, 23], [3, 14, 20, 22], [3, 14, 20, 23], [3, 14, 21, 24], [3, 14, 21, 25], [4, 8, 16, 30], [4, 9, 16, 30], [4, 14, 16, 24], [4, 14, 16, 25], [5, 7, 17, 27], [5, 7, 18, 27], [5, 8, 17, 29], [5, 8, 18, 29], [5, 9, 17, 29], [5, 9, 18, 29], [5, 10, 17, 30], [5, 10, 18, 30], [5, 11, 17, 30], [5, 11, 18, 30], [5, 12, 17, 22], [5, 12, 17, 23], [5, 12, 18, 22], [5, 12, 18, 23], [5, 13, 17, 24], [5, 13, 17, 25], [5, 13, 18, 24], [5, 13, 18, 25], [5, 14, 17, 26], [5, 14, 18, 26], [6, 8, 17, 28], [6, 8, 18, 28], [6, 9, 17, 28], [6, 9, 18, 28]], [[0, 7, 21, 26], [0, 8, 16, 28], [0, 8, 21, 27], [0, 9, 16, 28], [0, 9, 21, 27], [0, 10, 16, 30], [0, 10, 21, 22], [0, 10, 21, 23], [0, 10, 21, 29], [0, 11, 16, 30], [0, 11, 21, 22], [0, 11, 21, 23], [0, 11, 21, 29], [0, 12, 21, 24], [0, 12, 21, 25], [0, 12, 21, 30], [0, 13, 21, 26], [0, 14, 16, 26], [0, 14, 21, 27], [1, 10, 16, 30], [1, 11, 16, 30], [1, 14, 16, 26], [2, 7, 15, 27], [2, 8, 15, 29], [2, 9, 15, 29], [2, 10, 15, 30], [2, 10, 16, 30], [2, 11, 15, 30], [2, 11, 16, 30], [2, 12, 15, 22], [2, 12, 15, 23], [2, 13, 15, 24], [2, 13, 15, 25], [2, 14, 15, 26], [2, 14, 16, 26], [4, 7, 19, 30], [4, 14, 19, 22], [4, 14, 19, 23], [5, 10, 16, 30], [5, 11, 16, 30], [5, 14, 16, 26]], [[0, 7, 19, 28], [0, 14, 19, 28], [1, 7, 21, 27], [1, 8, 21, 29], [1, 9, 21, 29], [1, 10, 21, 30], [1, 11, 21, 30], [1, 12, 21, 22], [1, 12, 21, 23], [1, 13, 21, 24], [1, 13, 21, 25], [1, 14, 21, 26], [3, 8, 15, 28], [3, 8, 15, 29], [3, 9, 15, 28], [3, 9, 15, 29], [3, 10, 15, 30], [3, 11, 15, 30], [3, 13, 15, 24], [3, 13, 15, 25], [3, 14, 15, 26], [3, 14, 15, 28], [3, 14, 16, 28], [4, 7, 17, 28], [4, 7, 17, 29], [4, 7, 18, 28], [4, 7, 18, 29], [4, 8, 17, 30], [4, 8, 18, 30], [4, 9, 17, 30], [4, 9, 18, 30], [4, 13, 17, 22], [4, 13, 17, 23], [4, 13, 18, 22], [4, 13, 18, 23], [4, 14, 17, 24], [4, 14, 17, 25], [4, 14, 18, 24], [4, 14, 18, 25], [5, 7, 15, 26], [5, 8, 15, 27], [5, 9, 15, 27], [5, 10, 15, 22], [5, 10, 15, 23], [5, 10, 15, 29], [5, 11, 15, 22], [5, 11, 15, 23], [5, 11, 15, 29], [5, 12, 15, 24], [5, 12, 15, 25], [5, 12, 15, 30], [5, 13, 15, 26], [5, 14, 15, 27], [6, 10, 15, 28], [6, 11, 15, 28]], [[0, 7, 20, 30], [0, 8, 16, 30], [0, 9, 16, 30], [0, 10, 16, 28], [0, 11, 16, 28], [0, 14, 16, 24], [0, 14, 16, 25], [0, 14, 20, 22], [0, 14, 20, 23], [1, 7, 15, 29], [1, 7, 20, 30], [1, 8, 15, 30], [1, 8, 16, 30], [1, 9, 15, 30], [1, 9, 16, 30], [1, 13, 15, 22], [1, 13, 15, 23], [1, 14, 15, 24], [1, 14, 15, 25], [1, 14, 16, 24], [1, 14, 16, 25], [1, 14, 20, 22], [1, 14, 20, 23], [2, 7, 20, 30], [2, 8, 16, 30], [2, 9, 16, 30], [2, 14, 16, 24], [2, 14, 16, 25], [2, 14, 20, 22], [2, 14, 20, 23], [5, 7, 20, 30], [5, 8, 16, 30], [5, 9, 16, 30], [5, 14, 16, 24], [5, 14, 16, 25], [5, 14, 20, 22], [5, 14, 20, 23]], [[0, 7, 19, 30], [0, 14, 19, 22], [0, 14, 19, 23], [2, 7, 21, 29], [2, 8, 21, 30], [2, 9, 21, 30], [2, 13, 21, 22], [2, 13, 21, 23], [2, 14, 16, 28], [2, 14, 21, 24], [2, 14, 21, 25], [4, 7, 15, 24], [4, 7, 15, 25], [4, 7, 15, 26], [4, 8, 15, 22], [4, 8, 15, 23], [4, 8, 15, 28], [4, 8, 15, 29], [4, 9, 15, 22], [4, 9, 15, 23], [4, 9, 15, 28], [4, 9, 15, 29], [4, 10, 15, 22], [4, 10, 15, 23], [4, 10, 15, 30], [4, 11, 15, 22], [4, 11, 15, 23], [4, 11, 15, 30], [4, 13, 15, 24], [4, 13, 15, 25], [4, 14, 15, 26], [5, 7, 19, 30], [5, 14, 19, 22], [5, 14, 19, 23], [6, 7, 15, 30], [6, 7, 17, 30], [6, 7, 18, 30], [6, 7, 21, 30], [6, 14, 15, 22], [6, 14, 15, 23], [6, 14, 17, 22], [6, 14, 17, 23], [6, 14, 18, 22], [6, 14, 18, 23], [6, 14, 21, 22], [6, 14, 21, 23]], [[0, 7, 17, 29], [0, 7, 18, 29], [0, 8, 17, 30], [0, 8, 18, 30], [0, 9, 17, 30], [0, 9, 18, 30], [0, 12, 16, 28], [0, 13, 17, 22], [0, 13, 17, 23], [0, 13, 18, 22], [0, 13, 18, 23], [0, 14, 17, 24], [0, 14, 17, 25], [0, 14, 18, 24], [0, 14, 18, 25]], [[3, 7, 17, 30], [3, 7, 18, 30], [3, 7, 21, 30], [3, 14, 17, 22], [3, 14, 17, 23], [3, 14, 18, 22], [3, 14, 18, 23], [3, 14, 21, 22], [3, 14, 21, 23], [5, 7, 17, 29], [5, 7, 18, 29], [5, 8, 17, 30], [5, 8, 18, 30], [5, 9, 17, 30], [5, 9, 18, 30], [5, 13, 17, 22], [5, 13, 17, 23], [5, 13, 18, 22], [5, 13, 18, 23], [5, 14, 17, 24], [5, 14, 17, 25], [5, 14, 18, 24], [5, 14, 18, 25], [6, 7, 17, 28], [6, 7, 18, 28]], [[0, 7, 21, 27], [0, 8, 21, 29], [0, 9, 21, 29], [0, 10, 21, 30], [0, 11, 21, 30], [0, 12, 21, 22], [0, 12, 21, 23], [0, 13, 21, 24], [0, 13, 21, 25], [0, 14, 21, 26], [2, 7, 15, 29], [2, 8, 15, 30], [2, 9, 15, 30], [2, 13, 15, 22], [2, 13, 15, 23], [2, 14, 15, 24], [2, 14, 15, 25]], [[1, 7, 21, 29], [1, 8, 21, 30], [1, 9, 21, 30], [1, 13, 21, 22], [1, 13, 21, 23], [1, 14, 16, 28], [1, 14, 21, 24], [1, 14, 21, 25], [3, 7, 15, 28], [3, 7, 15, 29], [3, 8, 15, 30], [3, 9, 15, 30], [3, 13, 15, 22], [3, 13, 15, 23], [3, 14, 15, 24], [3, 14, 15, 25], [4, 7, 17, 30], [4, 7, 18, 30], [4, 14, 17, 22], [4, 14, 17, 23], [4, 14, 18, 22], [4, 14, 18, 23], [5, 7, 15, 27], [5, 8, 15, 29], [5, 9, 15, 29], [5, 10, 15, 30], [5, 11, 15, 30], [5, 12, 15, 22], [5, 12, 15, 23], [5, 13, 15, 24], [5, 13, 15, 25], [5, 14, 15, 26], [6, 8, 15, 28], [6, 9, 15, 28]], [[1, 7, 15, 30], [1, 14, 15, 22], [1, 14, 15, 23]], [[2, 7, 21, 30], [2, 14, 21, 22], [2, 14, 21, 23], [4, 7, 15, 28], [4, 7, 15, 29], [4, 8, 15, 30], [4, 9, 15, 30], [4, 13, 15, 22], [4, 13, 15, 23], [4, 14, 15, 24], [4, 14, 15, 25]], [[0, 7, 17, 30], [0, 7, 18, 30], [0, 14, 17, 22], [0, 14, 17, 23], [0, 14, 18, 22], [0, 14, 18, 23]], [[5, 7, 17, 30], [5, 7, 18, 30], [5, 14, 17, 22], [5, 14, 17, 23], [5, 14, 18, 22], [5, 14, 18, 23]], [[0, 7, 21, 29], [0, 8, 21, 30], [0, 9, 21, 30], [0, 13, 21, 22], [0, 13, 21, 23], [0, 14, 16, 28], [0, 14, 21, 24], [0, 14, 21, 25], [2, 7, 15, 30], [2, 14, 15, 22], [2, 14, 15, 23]], [[1, 7, 21, 30], [1, 14, 21, 22], [1, 14, 21, 23], [3, 7, 15, 30], [3, 14, 15, 22], [3, 14, 15, 23], [5, 7, 15, 29], [5, 8, 15, 30], [5, 9, 15, 30], [5, 13, 15, 22], [5, 13, 15, 23], [5, 14, 15, 24], [5, 14, 15, 25], [6, 7, 15, 28]], [], [[4, 7, 15, 30], [4, 14, 15, 22], [4, 14, 15, 23]], [], [], [[0, 7, 21, 30], [0, 14, 21, 22], [0, 14, 21, 23]], [[5, 7, 15, 30], [5, 14, 15, 22], [5, 14, 15, 23]], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
equalre=[[[] for i in x] for x in equal]
for do in range(len(equal)):
  for re in range(len(equal[do])):
    for mi in range(len(equal[do][re])):
      numr=equal[do][re][mi]
      equalre[do][re].append(matebasere.get(numr))
      equalre[do][re].append(gruposbase.get(matebasere.get(numr)))

profes={'8175': ' Rober', '8178': ' Luis ', '8181': ' Erick', '8184': ' Manue', '8187': ' Ramón', '8190': ' Edwar', '8193': ' Isaía', '8196': ' Angel', '8197': ' María', '8198': ' Fermí', '8199': ' Jerón', '8200': ' Rosa ', '8201': ' Maria', '8202': ' Ricar', '8203': ' Juan ', '8162': ' Edna ', '8163': ' José ', '8164': ' Marce', '8165': ' Hécto', '8166': ' Pablo', '8167': ' Raúl ', '8168': ' Erick', '8212': ' Soled', '8213': ' Adria', '8214': ' Manue', '8215': ' Vícto', '8216': ' Jorge', '8217': ' Marco', '8218': ' Adria', '8219': ' María', '8220': ' Ricky'}
materias51=['Matemáticas ', 'Mecánica Ana', 'Laboratorio ', 'Termodinámic']
materias7=[['8175', '8178', '8181', '8184', '8187', '8190', '8193'], ['8196', '8197', '8198', '8199', '8200', '8201', '8202', '8203'], ['8162', '8163', '8164', '8165', '8166', '8167', '8168'], ['8212', '8213', '8214', '8215', '8216', '8217', '8218', '8219', '8220']]
def vare():
 global oper
 oper=equalre

def vare():
 global oper
 oper=equalre

gruposbase={'8175': ('0', '7:300a10', '0', '7:300a10', '0', '0'), '8197': ('10a12', '0', '10a12', '0', '10a12', '0'), '8163': ('0', '0', '7a10', '0', '7a10', '0'), '8216': ('12a14', '0', '12a14', '0', '12a14', '0'), '8198': ('10a12', '0', '10a12', '0', '10a12', '0'), '8199': ('12a14', '0', '12a14', '0', '12a14', '0'), '8214': ('10a12', '0', '10a12', '0', '10a12', '0'), '8215': ('10a12', '0', '10a12', '0', '10a12', '0'), '8200': ('12a14', '0', '12a14', '0', '12a14', '0'), '8178': ('0', '10a12:30', '0', '10a12:30', '0', '0'), '8196': ('8a10', '0', '8a10', '0', '8a10', '0'), '8162': ('0', '7a10', '0', '7a10', '0', '0'), '8212': ('8a10', '0', '8a10', '0', '8a10', '0'), '8213': ('8a10', '0', '8a10', '0', '8a10', '0'), '8217': ('14a16', '0', '14a16', '0', '14a16', '0'), '8201': ('14a16', '0', '14a16', '0', '14a16', '0'), '8219': ('16a18', '0', '16a18', '0', '16a18', '0'), '8202': ('16a18', '0', '16a18', '0', '16a18', '0'), '8220': ('18a20', '0', '18a20', '0', '18a20', '0'), '8203': ('18a20', '0', '18a20', '0', '18a20', '0'), '8181': ('0', '12a14:30', '0', '12a14:30', '0', '0'), '8184': ('14a15', '14a15', '14a15', '14a15', '14a15', '0'), '8164': ('0', '11a14', '0', '11a14', '0', '0'), '8165': ('0', '11a14', '0', '11a14', '0', '0'), '8167': ('15a18', '0', '0', '0', '15a18', '0'), '8168': ('0', '15a18', '0', '15a18', '0', '0'), '8190': ('0', '15:300a18', '0', '15:300a18', '0', '0'), '8166': ('0', '11a14', '11a14', '0', '11a14', '0'), '8187': ('15a16', '15a16', '15a16', '15a16', '15a16', '0'), '8218': ('16a18', '16a18', '0', '16a18', '0', '0'), '8193': ('0', '0', '15:300a18', '0', '15:300a18', '0')}
matebasere={0: '8175', 1: '8178', 2: '8181', 3: '8184', 4: '8187', 5: '8190', 6: '8193', 7: '8196', 8: '8197', 9: '8198', 10: '8199', 11: '8200', 12: '8201', 13: '8202', 14: '8203', 15: '8162', 16: '8163', 17: '8164', 18: '8165', 19: '8166', 20: '8167', 21: '8168', 22: '8212', 23: '8213', 24: '8214', 25: '8215', 26: '8216', 27: '8217', 28: '8218', 29: '8219', 30: '8220'}
equal=[[[0, 8, 16, 26], [0, 9, 16, 26], [0, 10, 16, 24], [0, 10, 16, 25], [0, 11, 16, 24], [0, 11, 16, 25], [1, 7, 15, 24], [1, 7, 15, 25], [1, 8, 15, 22], [1, 8, 15, 23], [1, 8, 15, 26], [1, 8, 16, 26], [1, 9, 15, 22], [1, 9, 15, 23], [1, 9, 15, 26], [1, 9, 16, 26], [1, 10, 15, 24], [1, 10, 15, 25], [1, 10, 15, 27], [1, 10, 16, 24], [1, 10, 16, 25], [1, 11, 15, 24], [1, 11, 15, 25], [1, 11, 15, 27], [1, 11, 16, 24], [1, 11, 16, 25], [1, 12, 15, 26], [1, 12, 15, 29], [1, 13, 15, 27], [1, 13, 15, 30], [1, 14, 15, 29], [2, 8, 16, 26], [2, 9, 16, 26], [2, 10, 16, 24], [2, 10, 16, 25], [2, 11, 16, 24], [2, 11, 16, 25], [3, 8, 16, 26], [3, 8, 17, 26], [3, 8, 18, 26], [3, 8, 20, 26], [3, 8, 21, 26], [3, 9, 16, 26], [3, 9, 17, 26], [3, 9, 18, 26], [3, 9, 20, 26], [3, 9, 21, 26], [3, 10, 16, 24], [3, 10, 16, 25], [3, 10, 17, 24], [3, 10, 17, 25], [3, 10, 18, 24], [3, 10, 18, 25], [3, 10, 20, 24], [3, 10, 20, 25], [3, 10, 21, 24], [3, 10, 21, 25], [3, 11, 16, 24], [3, 11, 16, 25], [3, 11, 17, 24], [3, 11, 17, 25], [3, 11, 18, 24], [3, 11, 18, 25], [3, 11, 20, 24], [3, 11, 20, 25], [3, 11, 21, 24], [3, 11, 21, 25], [5, 8, 16, 26], [5, 9, 16, 26], [5, 10, 16, 24], [5, 10, 16, 25], [5, 11, 16, 24], [5, 11, 16, 25]], [[0, 12, 19, 29], [0, 13, 19, 27], [2, 7, 21, 24], [2, 7, 21, 25], [2, 8, 21, 22], [2, 8, 21, 23], [2, 8, 21, 26], [2, 9, 21, 22], [2, 9, 21, 23], [2, 9, 21, 26], [2, 10, 21, 24], [2, 10, 21, 25], [2, 10, 21, 27], [2, 11, 21, 24], [2, 11, 21, 25], [2, 11, 21, 27], [2, 12, 21, 26], [2, 12, 21, 29], [2, 13, 21, 27], [2, 13, 21, 30], [2, 14, 21, 29], [5, 12, 19, 29], [5, 13, 19, 27]], [[0, 7, 17, 24], [0, 7, 17, 25], [0, 7, 18, 24], [0, 7, 18, 25], [0, 8, 17, 22], [0, 8, 17, 23], [0, 8, 17, 26], [0, 8, 18, 22], [0, 8, 18, 23], [0, 8, 18, 26], [0, 8, 20, 26], [0, 9, 17, 22], [0, 9, 17, 23], [0, 9, 17, 26], [0, 9, 18, 22], [0, 9, 18, 23], [0, 9, 18, 26], [0, 9, 20, 26], [0, 10, 17, 24], [0, 10, 17, 25], [0, 10, 17, 27], [0, 10, 18, 24], [0, 10, 18, 25], [0, 10, 18, 27], [0, 10, 20, 24], [0, 10, 20, 25], [0, 11, 17, 24], [0, 11, 17, 25], [0, 11, 17, 27], [0, 11, 18, 24], [0, 11, 18, 25], [0, 11, 18, 27], [0, 11, 20, 24], [0, 11, 20, 25], [0, 12, 17, 26], [0, 12, 17, 29], [0, 12, 18, 26], [0, 12, 18, 29], [0, 13, 17, 27], [0, 13, 17, 30], [0, 13, 18, 27], [0, 13, 18, 30], [0, 14, 17, 29], [0, 14, 18, 29], [1, 8, 20, 26], [1, 9, 20, 26], [1, 10, 20, 24], [1, 10, 20, 25], [1, 11, 20, 24], [1, 11, 20, 25], [2, 8, 20, 26], [2, 9, 20, 26], [2, 10, 20, 24], [2, 10, 20, 25], [2, 11, 20, 24], [2, 11, 20, 25], [4, 13, 17, 30], [4, 13, 18, 30], [4, 14, 17, 29], [4, 14, 18, 29], [5, 8, 20, 26], [5, 9, 20, 26], [5, 10, 20, 24], [5, 10, 20, 25], [5, 11, 20, 24], [5, 11, 20, 25]], [[3, 10, 17, 28], [3, 10, 17, 29], [3, 10, 18, 28], [3, 10, 18, 29], [3, 10, 20, 30], [3, 10, 21, 29], [3, 11, 17, 28], [3, 11, 17, 29], [3, 11, 18, 28], [3, 11, 18, 29], [3, 11, 20, 30], [3, 11, 21, 29], [3, 13, 17, 26], [3, 13, 17, 30], [3, 13, 18, 26], [3, 13, 18, 30], [3, 13, 19, 30], [3, 13, 21, 26], [3, 13, 21, 30], [3, 14, 17, 29], [3, 14, 18, 29], [3, 14, 19, 29], [3, 14, 20, 26], [3, 14, 21, 29], [4, 8, 16, 26], [4, 9, 16, 26], [4, 10, 16, 24], [4, 10, 16, 25], [4, 11, 16, 24], [4, 11, 16, 25], [4, 13, 19, 30], [4, 14, 19, 29], [5, 7, 17, 24], [5, 7, 17, 25], [5, 7, 18, 24], [5, 7, 18, 25], [5, 8, 17, 22], [5, 8, 17, 23], [5, 8, 17, 26], [5, 8, 18, 22], [5, 8, 18, 23], [5, 8, 18, 26], [5, 9, 17, 22], [5, 9, 17, 23], [5, 9, 17, 26], [5, 9, 18, 22], [5, 9, 18, 23], [5, 9, 18, 26], [5, 10, 17, 24], [5, 10, 17, 25], [5, 10, 17, 27], [5, 10, 18, 24], [5, 10, 18, 25], [5, 10, 18, 27], [5, 11, 17, 24], [5, 11, 17, 25], [5, 11, 17, 27], [5, 11, 18, 24], [5, 11, 18, 25], [5, 11, 18, 27], [5, 12, 17, 26], [5, 12, 17, 29], [5, 12, 18, 26], [5, 12, 18, 29], [5, 13, 17, 27], [5, 13, 17, 30], [5, 13, 18, 27], [5, 13, 18, 30], [5, 14, 17, 29], [5, 14, 18, 29], [6, 8, 15, 26], [6, 8, 16, 26], [6, 8, 17, 26], [6, 8, 18, 26], [6, 8, 21, 26], [6, 9, 15, 26], [6, 9, 16, 26], [6, 9, 17, 26], [6, 9, 18, 26], [6, 9, 21, 26], [6, 10, 15, 24], [6, 10, 15, 25], [6, 10, 16, 24], [6, 10, 16, 25], [6, 10, 17, 24], [6, 10, 17, 25], [6, 10, 18, 24], [6, 10, 18, 25], [6, 10, 21, 24], [6, 10, 21, 25], [6, 11, 15, 24], [6, 11, 15, 25], [6, 11, 16, 24], [6, 11, 16, 25], [6, 11, 17, 24], [6, 11, 17, 25], [6, 11, 18, 24], [6, 11, 18, 25], [6, 11, 21, 24], [6, 11, 21, 25]], [[0, 10, 16, 27], [0, 11, 16, 27], [0, 12, 16, 26], [1, 10, 16, 27], [1, 11, 16, 27], [1, 12, 16, 26], [2, 7, 15, 24], [2, 7, 15, 25], [2, 8, 15, 22], [2, 8, 15, 23], [2, 8, 15, 26], [2, 9, 15, 22], [2, 9, 15, 23], [2, 9, 15, 26], [2, 10, 15, 24], [2, 10, 15, 25], [2, 10, 15, 27], [2, 10, 16, 27], [2, 11, 15, 24], [2, 11, 15, 25], [2, 11, 15, 27], [2, 11, 16, 27], [2, 12, 15, 26], [2, 12, 15, 29], [2, 12, 16, 26], [2, 13, 15, 27], [2, 13, 15, 30], [2, 14, 15, 29], [5, 10, 16, 27], [5, 11, 16, 27], [5, 12, 16, 26], [6, 14, 17, 28], [6, 14, 18, 28]], [[0, 13, 19, 30], [0, 14, 19, 29], [1, 7, 21, 24], [1, 7, 21, 25], [1, 8, 21, 22], [1, 8, 21, 23], [1, 8, 21, 26], [1, 9, 21, 22], [1, 9, 21, 23], [1, 9, 21, 26], [1, 10, 21, 24], [1, 10, 21, 25], [1, 10, 21, 27], [1, 11, 21, 24], [1, 11, 21, 25], [1, 11, 21, 27], [1, 12, 21, 26], [1, 12, 21, 29], [1, 13, 21, 27], [1, 13, 21, 30], [1, 14, 21, 29], [4, 8, 17, 26], [4, 8, 18, 26], [4, 9, 17, 26], [4, 9, 18, 26], [4, 10, 17, 24], [4, 10, 17, 25], [4, 10, 17, 28], [4, 10, 17, 29], [4, 10, 18, 24], [4, 10, 18, 25], [4, 10, 18, 28], [4, 10, 18, 29], [4, 11, 17, 24], [4, 11, 17, 25], [4, 11, 17, 28], [4, 11, 17, 29], [4, 11, 18, 24], [4, 11, 18, 25], [4, 11, 18, 28], [4, 11, 18, 29], [4, 13, 17, 26], [4, 13, 18, 26], [5, 13, 19, 30], [5, 14, 19, 29], [6, 14, 19, 28]], [[0, 7, 20, 24], [0, 7, 20, 25], [0, 8, 16, 27], [0, 8, 20, 22], [0, 8, 20, 23], [0, 9, 16, 27], [0, 9, 20, 22], [0, 9, 20, 23], [0, 10, 20, 30], [0, 11, 20, 30], [0, 12, 16, 24], [0, 12, 16, 25], [0, 12, 17, 28], [0, 12, 18, 28], [0, 14, 17, 28], [0, 14, 18, 28], [0, 14, 20, 26], [1, 7, 15, 26], [1, 7, 20, 24], [1, 7, 20, 25], [1, 8, 15, 27], [1, 8, 16, 27], [1, 8, 20, 22], [1, 8, 20, 23], [1, 9, 15, 27], [1, 9, 16, 27], [1, 9, 20, 22], [1, 9, 20, 23], [1, 10, 15, 22], [1, 10, 15, 23], [1, 10, 15, 29], [1, 10, 20, 30], [1, 11, 15, 22], [1, 11, 15, 23], [1, 11, 15, 29], [1, 11, 20, 30], [1, 12, 15, 24], [1, 12, 15, 25], [1, 12, 15, 30], [1, 12, 16, 24], [1, 12, 16, 25], [1, 13, 15, 26], [1, 14, 15, 27], [1, 14, 20, 26], [2, 7, 20, 24], [2, 7, 20, 25], [2, 8, 16, 27], [2, 8, 20, 22], [2, 8, 20, 23], [2, 9, 16, 27], [2, 9, 20, 22], [2, 9, 20, 23], [2, 10, 20, 30], [2, 11, 20, 30], [2, 12, 16, 24], [2, 12, 16, 25], [2, 14, 20, 26], [3, 7, 17, 24], [3, 7, 17, 25], [3, 7, 17, 26], [3, 7, 18, 24], [3, 7, 18, 25], [3, 7, 18, 26], [3, 7, 20, 24], [3, 7, 20, 25], [3, 7, 20, 26], [3, 7, 21, 24], [3, 7, 21, 25], [3, 7, 21, 26], [3, 8, 17, 22], [3, 8, 17, 23], [3, 8, 18, 22], [3, 8, 18, 23], [3, 8, 20, 22], [3, 8, 20, 23], [3, 8, 21, 22], [3, 8, 21, 23], [3, 9, 17, 22], [3, 9, 17, 23], [3, 9, 18, 22], [3, 9, 18, 23], [3, 9, 20, 22], [3, 9, 20, 23], [3, 9, 21, 22], [3, 9, 21, 23], [3, 10, 17, 22], [3, 10, 17, 23], [3, 10, 18, 22], [3, 10, 18, 23], [3, 10, 20, 22], [3, 10, 20, 23], [3, 10, 21, 22], [3, 10, 21, 23], [3, 11, 17, 22], [3, 11, 17, 23], [3, 11, 18, 22], [3, 11, 18, 23], [3, 11, 20, 22], [3, 11, 20, 23], [3, 11, 21, 22], [3, 11, 21, 23], [4, 14, 17, 28], [4, 14, 18, 28], [5, 7, 20, 24], [5, 7, 20, 25], [5, 8, 16, 27], [5, 8, 20, 22], [5, 8, 20, 23], [5, 9, 16, 27], [5, 9, 20, 22], [5, 9, 20, 23], [5, 10, 20, 30], [5, 11, 20, 30], [5, 12, 16, 24], [5, 12, 16, 25], [5, 14, 20, 26]], [[0, 7, 19, 27], [0, 12, 19, 22], [0, 12, 19, 23], [0, 12, 19, 30], [0, 14, 19, 27], [1, 12, 15, 28], [1, 14, 15, 28], [2, 7, 21, 26], [2, 8, 16, 28], [2, 8, 21, 27], [2, 9, 16, 28], [2, 9, 21, 27], [2, 10, 21, 22], [2, 10, 21, 23], [2, 10, 21, 29], [2, 11, 21, 22], [2, 11, 21, 23], [2, 11, 21, 29], [2, 12, 15, 28], [2, 12, 21, 24], [2, 12, 21, 25], [2, 12, 21, 30], [2, 13, 21, 26], [2, 14, 15, 28], [2, 14, 21, 27], [3, 10, 16, 28], [3, 10, 16, 29], [3, 11, 16, 28], [3, 11, 16, 29], [3, 13, 16, 26], [4, 10, 16, 28], [4, 10, 16, 29], [4, 11, 16, 28], [4, 11, 16, 29], [4, 13, 16, 26], [4, 14, 19, 28], [5, 7, 19, 27], [5, 12, 19, 22], [5, 12, 19, 23], [5, 12, 19, 30], [5, 14, 19, 27], [6, 7, 15, 24], [6, 7, 15, 25], [6, 7, 17, 24], [6, 7, 17, 25], [6, 7, 18, 24], [6, 7, 18, 25], [6, 7, 21, 24], [6, 7, 21, 25], [6, 8, 15, 22], [6, 8, 15, 23], [6, 8, 17, 22], [6, 8, 17, 23], [6, 8, 18, 22], [6, 8, 18, 23], [6, 8, 21, 22], [6, 8, 21, 23], [6, 9, 15, 22], [6, 9, 15, 23], [6, 9, 17, 22], [6, 9, 17, 23], [6, 9, 18, 22], [6, 9, 18, 23], [6, 9, 21, 22], [6, 9, 21, 23], [6, 10, 15, 30], [6, 10, 17, 30], [6, 10, 18, 30], [6, 10, 21, 30], [6, 11, 15, 30], [6, 11, 17, 30], [6, 11, 18, 30], [6, 11, 21, 30], [6, 14, 15, 26], [6, 14, 17, 26], [6, 14, 18, 26], [6, 14, 21, 26]], [[0, 7, 17, 26], [0, 7, 18, 26], [0, 7, 20, 26], [0, 8, 17, 27], [0, 8, 18, 27], [0, 9, 17, 27], [0, 9, 18, 27], [0, 10, 17, 22], [0, 10, 17, 23], [0, 10, 17, 28], [0, 10, 17, 29], [0, 10, 18, 22], [0, 10, 18, 23], [0, 10, 18, 28], [0, 10, 18, 29], [0, 10, 20, 22], [0, 10, 20, 23], [0, 11, 17, 22], [0, 11, 17, 23], [0, 11, 17, 28], [0, 11, 17, 29], [0, 11, 18, 22], [0, 11, 18, 23], [0, 11, 18, 28], [0, 11, 18, 29], [0, 11, 20, 22], [0, 11, 20, 23], [0, 12, 16, 29], [0, 12, 17, 24], [0, 12, 17, 25], [0, 12, 17, 30], [0, 12, 18, 24], [0, 12, 18, 25], [0, 12, 18, 30], [0, 13, 16, 27], [0, 13, 17, 26], [0, 13, 18, 26], [0, 14, 17, 27], [0, 14, 18, 27], [1, 7, 20, 26], [1, 10, 20, 22], [1, 10, 20, 23], [1, 11, 20, 22], [1, 11, 20, 23], [1, 12, 16, 29], [1, 13, 16, 27], [2, 7, 20, 26], [2, 10, 20, 22], [2, 10, 20, 23], [2, 11, 20, 22], [2, 11, 20, 23], [2, 12, 16, 29], [2, 13, 16, 27], [3, 8, 15, 26], [3, 9, 15, 26], [3, 10, 15, 24], [3, 10, 15, 25], [3, 11, 15, 24], [3, 11, 15, 25], [5, 7, 20, 26], [5, 10, 20, 22], [5, 10, 20, 23], [5, 11, 20, 22], [5, 11, 20, 23], [5, 12, 16, 29], [5, 13, 16, 27]], [[0, 12, 19, 28], [1, 10, 15, 28], [1, 11, 15, 28], [2, 10, 15, 28], [2, 10, 16, 28], [2, 11, 15, 28], [2, 11, 16, 28], [3, 7, 19, 28], [3, 7, 19, 29], [3, 8, 16, 28], [3, 8, 16, 29], [3, 8, 17, 28], [3, 8, 17, 29], [3, 8, 18, 28], [3, 8, 18, 29], [3, 8, 20, 30], [3, 8, 21, 29], [3, 9, 16, 28], [3, 9, 16, 29], [3, 9, 17, 28], [3, 9, 17, 29], [3, 9, 18, 28], [3, 9, 18, 29], [3, 9, 20, 30], [3, 9, 21, 29], [3, 10, 17, 30], [3, 10, 18, 30], [3, 10, 21, 30], [3, 11, 17, 30], [3, 11, 18, 30], [3, 11, 21, 30], [3, 13, 16, 24], [3, 13, 16, 25], [3, 13, 17, 24], [3, 13, 17, 25], [3, 13, 18, 24], [3, 13, 18, 25], [3, 13, 19, 22], [3, 13, 19, 23], [3, 13, 21, 24], [3, 13, 21, 25], [3, 14, 17, 26], [3, 14, 17, 28], [3, 14, 18, 26], [3, 14, 18, 28], [3, 14, 19, 28], [3, 14, 20, 24], [3, 14, 20, 25], [3, 14, 21, 26], [4, 8, 16, 28], [4, 8, 16, 29], [4, 9, 16, 28], [4, 9, 16, 29], [4, 13, 16, 24], [4, 13, 16, 25], [5, 7, 17, 26], [5, 7, 18, 26], [5, 8, 17, 27], [5, 8, 18, 27], [5, 9, 17, 27], [5, 9, 18, 27], [5, 10, 17, 22], [5, 10, 17, 23], [5, 10, 17, 29], [5, 10, 18, 22], [5, 10, 18, 23], [5, 10, 18, 29], [5, 11, 17, 22], [5, 11, 17, 23], [5, 11, 17, 29], [5, 11, 18, 22], [5, 11, 18, 23], [5, 11, 18, 29], [5, 12, 17, 24], [5, 12, 17, 25], [5, 12, 17, 30], [5, 12, 18, 24], [5, 12, 18, 25], [5, 12, 18, 30], [5, 13, 17, 26], [5, 13, 18, 26], [5, 14, 17, 27], [5, 14, 18, 27], [6, 7, 15, 26], [6, 7, 17, 26], [6, 7, 18, 26], [6, 7, 21, 26], [6, 10, 15, 22], [6, 10, 15, 23], [6, 10, 16, 28], [6, 10, 17, 22], [6, 10, 17, 23], [6, 10, 17, 28], [6, 10, 18, 22], [6, 10, 18, 23], [6, 10, 18, 28], [6, 10, 21, 22], [6, 10, 21, 23], [6, 11, 15, 22], [6, 11, 15, 23], [6, 11, 16, 28], [6, 11, 17, 22], [6, 11, 17, 23], [6, 11, 17, 28], [6, 11, 18, 22], [6, 11, 18, 23], [6, 11, 18, 28], [6, 11, 21, 22], [6, 11, 21, 23]], [[0, 7, 21, 24], [0, 7, 21, 25], [0, 8, 17, 28], [0, 8, 18, 28], [0, 8, 21, 22], [0, 8, 21, 23], [0, 8, 21, 26], [0, 9, 17, 28], [0, 9, 18, 28], [0, 9, 21, 22], [0, 9, 21, 23], [0, 9, 21, 26], [0, 10, 16, 29], [0, 10, 21, 24], [0, 10, 21, 25], [0, 10, 21, 27], [0, 11, 16, 29], [0, 11, 21, 24], [0, 11, 21, 25], [0, 11, 21, 27], [0, 12, 21, 26], [0, 12, 21, 29], [0, 13, 16, 26], [0, 13, 21, 27], [0, 13, 21, 30], [0, 14, 21, 29], [1, 10, 16, 29], [1, 11, 16, 29], [1, 13, 16, 26], [2, 7, 15, 26], [2, 8, 15, 27], [2, 9, 15, 27], [2, 10, 15, 22], [2, 10, 15, 23], [2, 10, 15, 29], [2, 10, 16, 29], [2, 11, 15, 22], [2, 11, 15, 23], [2, 11, 15, 29], [2, 11, 16, 29], [2, 12, 15, 24], [2, 12, 15, 25], [2, 12, 15, 30], [2, 13, 15, 26], [2, 13, 16, 26], [2, 14, 15, 27], [4, 7, 19, 28], [4, 7, 19, 29], [4, 13, 15, 30], [4, 13, 16, 30], [4, 13, 19, 22], [4, 13, 19, 23], [4, 14, 15, 29], [4, 14, 16, 29], [5, 10, 16, 29], [5, 11, 16, 29], [5, 13, 16, 26]], [[1, 7, 21, 26], [1, 8, 15, 28], [1, 8, 16, 28], [1, 8, 21, 27], [1, 9, 15, 28], [1, 9, 16, 28], [1, 9, 21, 27], [1, 10, 21, 22], [1, 10, 21, 23], [1, 10, 21, 29], [1, 11, 21, 22], [1, 11, 21, 23], [1, 11, 21, 29], [1, 12, 21, 24], [1, 12, 21, 25], [1, 12, 21, 30], [1, 13, 21, 26], [1, 14, 21, 27], [2, 8, 15, 28], [2, 9, 15, 28], [2, 12, 16, 28], [3, 10, 15, 28], [3, 10, 15, 29], [3, 11, 15, 28], [3, 11, 15, 29], [3, 13, 15, 26], [3, 13, 15, 30], [3, 13, 16, 30], [3, 14, 15, 29], [3, 14, 16, 29], [4, 7, 17, 24], [4, 7, 17, 25], [4, 7, 17, 26], [4, 7, 18, 24], [4, 7, 18, 25], [4, 7, 18, 26], [4, 8, 17, 22], [4, 8, 17, 23], [4, 8, 17, 28], [4, 8, 17, 29], [4, 8, 18, 22], [4, 8, 18, 23], [4, 8, 18, 28], [4, 8, 18, 29], [4, 9, 17, 22], [4, 9, 17, 23], [4, 9, 17, 28], [4, 9, 17, 29], [4, 9, 18, 22], [4, 9, 18, 23], [4, 9, 18, 28], [4, 9, 18, 29], [4, 10, 17, 22], [4, 10, 17, 23], [4, 10, 17, 30], [4, 10, 18, 22], [4, 10, 18, 23], [4, 10, 18, 30], [4, 11, 17, 22], [4, 11, 17, 23], [4, 11, 17, 30], [4, 11, 18, 22], [4, 11, 18, 23], [4, 11, 18, 30], [4, 13, 17, 24], [4, 13, 17, 25], [4, 13, 18, 24], [4, 13, 18, 25], [4, 14, 17, 26], [4, 14, 18, 26], [5, 7, 15, 24], [5, 7, 15, 25], [5, 8, 15, 22], [5, 8, 15, 23], [5, 8, 15, 26], [5, 9, 15, 22], [5, 9, 15, 23], [5, 9, 15, 26], [5, 10, 15, 24], [5, 10, 15, 25], [5, 10, 15, 27], [5, 11, 15, 24], [5, 11, 15, 25], [5, 11, 15, 27], [5, 12, 15, 26], [5, 12, 15, 29], [5, 13, 15, 27], [5, 13, 15, 30], [5, 14, 15, 29], [6, 8, 16, 28], [6, 9, 16, 28], [6, 10, 16, 30], [6, 11, 16, 30], [6, 14, 16, 26], [6, 14, 16, 28]], [[0, 7, 17, 28], [0, 7, 18, 28], [0, 8, 16, 29], [0, 8, 20, 30], [0, 9, 16, 29], [0, 9, 20, 30], [0, 13, 16, 24], [0, 13, 16, 25], [0, 13, 16, 30], [0, 14, 16, 29], [0, 14, 20, 24], [0, 14, 20, 25], [1, 7, 15, 27], [1, 8, 15, 29], [1, 8, 16, 29], [1, 8, 20, 30], [1, 9, 15, 29], [1, 9, 16, 29], [1, 9, 20, 30], [1, 10, 15, 30], [1, 11, 15, 30], [1, 12, 15, 22], [1, 12, 15, 23], [1, 13, 15, 24], [1, 13, 15, 25], [1, 13, 16, 24], [1, 13, 16, 25], [1, 13, 16, 30], [1, 14, 15, 26], [1, 14, 16, 29], [1, 14, 20, 24], [1, 14, 20, 25], [2, 8, 16, 29], [2, 8, 20, 30], [2, 9, 16, 29], [2, 9, 20, 30], [2, 13, 16, 24], [2, 13, 16, 25], [2, 13, 16, 30], [2, 14, 16, 29], [2, 14, 20, 24], [2, 14, 20, 25], [5, 8, 16, 29], [5, 8, 20, 30], [5, 9, 16, 29], [5, 9, 20, 30], [5, 13, 16, 24], [5, 13, 16, 25], [5, 13, 16, 30], [5, 14, 16, 29], [5, 14, 20, 24], [5, 14, 20, 25], [6, 14, 15, 28]], [[0, 7, 19, 29], [0, 13, 19, 22], [0, 13, 19, 23], [1, 7, 15, 28], [1, 10, 16, 28], [1, 11, 16, 28], [2, 7, 15, 28], [2, 7, 21, 27], [2, 8, 21, 29], [2, 9, 21, 29], [2, 10, 21, 30], [2, 11, 21, 30], [2, 12, 21, 22], [2, 12, 21, 23], [2, 13, 21, 24], [2, 13, 21, 25], [2, 14, 21, 26], [3, 10, 16, 30], [3, 11, 16, 30], [3, 14, 16, 26], [4, 8, 15, 26], [4, 9, 15, 26], [4, 10, 15, 24], [4, 10, 15, 25], [4, 10, 15, 28], [4, 10, 15, 29], [4, 10, 16, 30], [4, 11, 15, 24], [4, 11, 15, 25], [4, 11, 15, 28], [4, 11, 15, 29], [4, 11, 16, 30], [4, 13, 15, 26], [4, 14, 16, 26], [5, 7, 19, 29], [5, 13, 19, 22], [5, 13, 19, 23], [6, 7, 19, 28], [6, 7, 19, 30], [6, 8, 15, 30], [6, 8, 16, 30], [6, 8, 17, 30], [6, 8, 18, 30], [6, 8, 21, 30], [6, 9, 15, 30], [6, 9, 16, 30], [6, 9, 17, 30], [6, 9, 18, 30], [6, 9, 21, 30], [6, 14, 15, 24], [6, 14, 15, 25], [6, 14, 16, 24], [6, 14, 16, 25], [6, 14, 17, 24], [6, 14, 17, 25], [6, 14, 18, 24], [6, 14, 18, 25], [6, 14, 19, 22], [6, 14, 19, 23], [6, 14, 21, 24], [6, 14, 21, 25]], [[0, 7, 17, 27], [0, 7, 18, 27], [0, 8, 17, 29], [0, 8, 18, 29], [0, 9, 17, 29], [0, 9, 18, 29], [0, 10, 17, 30], [0, 10, 18, 30], [0, 11, 17, 30], [0, 11, 18, 30], [0, 12, 16, 30], [0, 12, 17, 22], [0, 12, 17, 23], [0, 12, 18, 22], [0, 12, 18, 23], [0, 13, 17, 24], [0, 13, 17, 25], [0, 13, 18, 24], [0, 13, 18, 25], [0, 14, 16, 27], [0, 14, 17, 26], [0, 14, 18, 26], [1, 12, 16, 30], [1, 14, 16, 27], [2, 12, 16, 30], [2, 14, 16, 27], [3, 7, 15, 24], [3, 7, 15, 25], [3, 7, 15, 26], [3, 8, 15, 22], [3, 8, 15, 23], [3, 9, 15, 22], [3, 9, 15, 23], [3, 10, 15, 22], [3, 10, 15, 23], [3, 11, 15, 22], [3, 11, 15, 23], [4, 14, 15, 28], [4, 14, 16, 28], [5, 12, 16, 30], [5, 14, 16, 27]], [[1, 12, 16, 28], [3, 7, 17, 28], [3, 7, 17, 29], [3, 7, 18, 28], [3, 7, 18, 29], [3, 7, 19, 30], [3, 7, 20, 30], [3, 7, 21, 29], [3, 8, 16, 30], [3, 8, 17, 30], [3, 8, 18, 30], [3, 8, 21, 30], [3, 9, 16, 30], [3, 9, 17, 30], [3, 9, 18, 30], [3, 9, 21, 30], [3, 13, 17, 22], [3, 13, 17, 23], [3, 13, 18, 22], [3, 13, 18, 23], [3, 13, 21, 22], [3, 13, 21, 23], [3, 14, 16, 24], [3, 14, 16, 25], [3, 14, 17, 24], [3, 14, 17, 25], [3, 14, 18, 24], [3, 14, 18, 25], [3, 14, 19, 22], [3, 14, 19, 23], [3, 14, 20, 22], [3, 14, 20, 23], [3, 14, 21, 24], [3, 14, 21, 25], [4, 8, 16, 30], [4, 9, 16, 30], [4, 14, 16, 24], [4, 14, 16, 25], [5, 7, 17, 27], [5, 7, 18, 27], [5, 8, 17, 29], [5, 8, 18, 29], [5, 9, 17, 29], [5, 9, 18, 29], [5, 10, 17, 30], [5, 10, 18, 30], [5, 11, 17, 30], [5, 11, 18, 30], [5, 12, 17, 22], [5, 12, 17, 23], [5, 12, 18, 22], [5, 12, 18, 23], [5, 13, 17, 24], [5, 13, 17, 25], [5, 13, 18, 24], [5, 13, 18, 25], [5, 14, 17, 26], [5, 14, 18, 26], [6, 8, 17, 28], [6, 8, 18, 28], [6, 9, 17, 28], [6, 9, 18, 28]], [[0, 7, 21, 26], [0, 8, 16, 28], [0, 8, 21, 27], [0, 9, 16, 28], [0, 9, 21, 27], [0, 10, 16, 30], [0, 10, 21, 22], [0, 10, 21, 23], [0, 10, 21, 29], [0, 11, 16, 30], [0, 11, 21, 22], [0, 11, 21, 23], [0, 11, 21, 29], [0, 12, 21, 24], [0, 12, 21, 25], [0, 12, 21, 30], [0, 13, 21, 26], [0, 14, 16, 26], [0, 14, 21, 27], [1, 10, 16, 30], [1, 11, 16, 30], [1, 14, 16, 26], [2, 7, 15, 27], [2, 8, 15, 29], [2, 9, 15, 29], [2, 10, 15, 30], [2, 10, 16, 30], [2, 11, 15, 30], [2, 11, 16, 30], [2, 12, 15, 22], [2, 12, 15, 23], [2, 13, 15, 24], [2, 13, 15, 25], [2, 14, 15, 26], [2, 14, 16, 26], [4, 7, 19, 30], [4, 14, 19, 22], [4, 14, 19, 23], [5, 10, 16, 30], [5, 11, 16, 30], [5, 14, 16, 26]], [[0, 7, 19, 28], [0, 14, 19, 28], [1, 7, 21, 27], [1, 8, 21, 29], [1, 9, 21, 29], [1, 10, 21, 30], [1, 11, 21, 30], [1, 12, 21, 22], [1, 12, 21, 23], [1, 13, 21, 24], [1, 13, 21, 25], [1, 14, 21, 26], [3, 8, 15, 28], [3, 8, 15, 29], [3, 9, 15, 28], [3, 9, 15, 29], [3, 10, 15, 30], [3, 11, 15, 30], [3, 13, 15, 24], [3, 13, 15, 25], [3, 14, 15, 26], [3, 14, 15, 28], [3, 14, 16, 28], [4, 7, 17, 28], [4, 7, 17, 29], [4, 7, 18, 28], [4, 7, 18, 29], [4, 8, 17, 30], [4, 8, 18, 30], [4, 9, 17, 30], [4, 9, 18, 30], [4, 13, 17, 22], [4, 13, 17, 23], [4, 13, 18, 22], [4, 13, 18, 23], [4, 14, 17, 24], [4, 14, 17, 25], [4, 14, 18, 24], [4, 14, 18, 25], [5, 7, 15, 26], [5, 8, 15, 27], [5, 9, 15, 27], [5, 10, 15, 22], [5, 10, 15, 23], [5, 10, 15, 29], [5, 11, 15, 22], [5, 11, 15, 23], [5, 11, 15, 29], [5, 12, 15, 24], [5, 12, 15, 25], [5, 12, 15, 30], [5, 13, 15, 26], [5, 14, 15, 27], [6, 10, 15, 28], [6, 11, 15, 28]], [[0, 7, 20, 30], [0, 8, 16, 30], [0, 9, 16, 30], [0, 10, 16, 28], [0, 11, 16, 28], [0, 14, 16, 24], [0, 14, 16, 25], [0, 14, 20, 22], [0, 14, 20, 23], [1, 7, 15, 29], [1, 7, 20, 30], [1, 8, 15, 30], [1, 8, 16, 30], [1, 9, 15, 30], [1, 9, 16, 30], [1, 13, 15, 22], [1, 13, 15, 23], [1, 14, 15, 24], [1, 14, 15, 25], [1, 14, 16, 24], [1, 14, 16, 25], [1, 14, 20, 22], [1, 14, 20, 23], [2, 7, 20, 30], [2, 8, 16, 30], [2, 9, 16, 30], [2, 14, 16, 24], [2, 14, 16, 25], [2, 14, 20, 22], [2, 14, 20, 23], [5, 7, 20, 30], [5, 8, 16, 30], [5, 9, 16, 30], [5, 14, 16, 24], [5, 14, 16, 25], [5, 14, 20, 22], [5, 14, 20, 23]], [[0, 7, 19, 30], [0, 14, 19, 22], [0, 14, 19, 23], [2, 7, 21, 29], [2, 8, 21, 30], [2, 9, 21, 30], [2, 13, 21, 22], [2, 13, 21, 23], [2, 14, 16, 28], [2, 14, 21, 24], [2, 14, 21, 25], [4, 7, 15, 24], [4, 7, 15, 25], [4, 7, 15, 26], [4, 8, 15, 22], [4, 8, 15, 23], [4, 8, 15, 28], [4, 8, 15, 29], [4, 9, 15, 22], [4, 9, 15, 23], [4, 9, 15, 28], [4, 9, 15, 29], [4, 10, 15, 22], [4, 10, 15, 23], [4, 10, 15, 30], [4, 11, 15, 22], [4, 11, 15, 23], [4, 11, 15, 30], [4, 13, 15, 24], [4, 13, 15, 25], [4, 14, 15, 26], [5, 7, 19, 30], [5, 14, 19, 22], [5, 14, 19, 23], [6, 7, 15, 30], [6, 7, 17, 30], [6, 7, 18, 30], [6, 7, 21, 30], [6, 14, 15, 22], [6, 14, 15, 23], [6, 14, 17, 22], [6, 14, 17, 23], [6, 14, 18, 22], [6, 14, 18, 23], [6, 14, 21, 22], [6, 14, 21, 23]], [[0, 7, 17, 29], [0, 7, 18, 29], [0, 8, 17, 30], [0, 8, 18, 30], [0, 9, 17, 30], [0, 9, 18, 30], [0, 12, 16, 28], [0, 13, 17, 22], [0, 13, 17, 23], [0, 13, 18, 22], [0, 13, 18, 23], [0, 14, 17, 24], [0, 14, 17, 25], [0, 14, 18, 24], [0, 14, 18, 25]], [[3, 7, 17, 30], [3, 7, 18, 30], [3, 7, 21, 30], [3, 14, 17, 22], [3, 14, 17, 23], [3, 14, 18, 22], [3, 14, 18, 23], [3, 14, 21, 22], [3, 14, 21, 23], [5, 7, 17, 29], [5, 7, 18, 29], [5, 8, 17, 30], [5, 8, 18, 30], [5, 9, 17, 30], [5, 9, 18, 30], [5, 13, 17, 22], [5, 13, 17, 23], [5, 13, 18, 22], [5, 13, 18, 23], [5, 14, 17, 24], [5, 14, 17, 25], [5, 14, 18, 24], [5, 14, 18, 25], [6, 7, 17, 28], [6, 7, 18, 28]], [[0, 7, 21, 27], [0, 8, 21, 29], [0, 9, 21, 29], [0, 10, 21, 30], [0, 11, 21, 30], [0, 12, 21, 22], [0, 12, 21, 23], [0, 13, 21, 24], [0, 13, 21, 25], [0, 14, 21, 26], [2, 7, 15, 29], [2, 8, 15, 30], [2, 9, 15, 30], [2, 13, 15, 22], [2, 13, 15, 23], [2, 14, 15, 24], [2, 14, 15, 25]], [[1, 7, 21, 29], [1, 8, 21, 30], [1, 9, 21, 30], [1, 13, 21, 22], [1, 13, 21, 23], [1, 14, 16, 28], [1, 14, 21, 24], [1, 14, 21, 25], [3, 7, 15, 28], [3, 7, 15, 29], [3, 8, 15, 30], [3, 9, 15, 30], [3, 13, 15, 22], [3, 13, 15, 23], [3, 14, 15, 24], [3, 14, 15, 25], [4, 7, 17, 30], [4, 7, 18, 30], [4, 14, 17, 22], [4, 14, 17, 23], [4, 14, 18, 22], [4, 14, 18, 23], [5, 7, 15, 27], [5, 8, 15, 29], [5, 9, 15, 29], [5, 10, 15, 30], [5, 11, 15, 30], [5, 12, 15, 22], [5, 12, 15, 23], [5, 13, 15, 24], [5, 13, 15, 25], [5, 14, 15, 26], [6, 8, 15, 28], [6, 9, 15, 28]], [[1, 7, 15, 30], [1, 14, 15, 22], [1, 14, 15, 23]], [[2, 7, 21, 30], [2, 14, 21, 22], [2, 14, 21, 23], [4, 7, 15, 28], [4, 7, 15, 29], [4, 8, 15, 30], [4, 9, 15, 30], [4, 13, 15, 22], [4, 13, 15, 23], [4, 14, 15, 24], [4, 14, 15, 25]], [[0, 7, 17, 30], [0, 7, 18, 30], [0, 14, 17, 22], [0, 14, 17, 23], [0, 14, 18, 22], [0, 14, 18, 23]], [[5, 7, 17, 30], [5, 7, 18, 30], [5, 14, 17, 22], [5, 14, 17, 23], [5, 14, 18, 22], [5, 14, 18, 23]], [[0, 7, 21, 29], [0, 8, 21, 30], [0, 9, 21, 30], [0, 13, 21, 22], [0, 13, 21, 23], [0, 14, 16, 28], [0, 14, 21, 24], [0, 14, 21, 25], [2, 7, 15, 30], [2, 14, 15, 22], [2, 14, 15, 23]], [[1, 7, 21, 30], [1, 14, 21, 22], [1, 14, 21, 23], [3, 7, 15, 30], [3, 14, 15, 22], [3, 14, 15, 23], [5, 7, 15, 29], [5, 8, 15, 30], [5, 9, 15, 30], [5, 13, 15, 22], [5, 13, 15, 23], [5, 14, 15, 24], [5, 14, 15, 25], [6, 7, 15, 28]], [], [[4, 7, 15, 30], [4, 14, 15, 22], [4, 14, 15, 23]], [], [], [[0, 7, 21, 30], [0, 14, 21, 22], [0, 14, 21, 23]], [[5, 7, 15, 30], [5, 14, 15, 22], [5, 14, 15, 23]], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
equalre=[[[] for i in x] for x in equal]
for do in range(len(equal)):
  for re in range(len(equal[do])):
    for mi in range(len(equal[do][re])):
      numr=equal[do][re][mi]
      equalre[do][re].append(matebasere.get(numr))
      equalre[do][re].append(gruposbase.get(matebasere.get(numr)))

profes={'8175': '_Roberto', '8178': '_Luis', '8181': '_Erick', '8184': '_Manuel', '8187': '_Ramón', '8190': '_Edward', '8193': '_Isaías', '8196': '_Angel', '8197': '_María', '8198': '_Fermín', '8199': '_Jerónimo', '8200': '_Rosa', '8201': '_Mariano', '8202': '_Ricardo', '8203': '_Juan', '8162': '_Ed', '8163': '_Jo', '8164': '_Ma', '8165': '_Hé', '8166': '_Pa', '8167': '_Ra', '8168': '_Er', '8212': '_Soledad', '8213': '_Adriana', '8214': '_Manuel', '8215': '_Víctor', '8216': '_Jorge', '8217': '_Marcos', '8218': '_Adriana', '8219': '_María', '8220': '_Ricky'}
materias51=['Matemáticas_', 'Mecánica_Ana', 'Laboratorio_', 'Termodinámic']
materias7=[['8175', '8178', '8181', '8184', '8187', '8190', '8193'], ['8196', '8197', '8198', '8199', '8200', '8201', '8202', '8203'], ['8162', '8163', '8164', '8165', '8166', '8167', '8168'], ['8212', '8213', '8214', '8215', '8216', '8217', '8218', '8219', '8220']]
def vare():
 global oper
 oper=equalre

# aqui inicia el codigo que paso a repl.it
#------------Pantalla-----------------------
# ini=Tk()
# ini.title("Combinaciones de materias")
# mifr=Frame()
# mifr.pack()

# #-------VaRIABLES DEL USUARIO----------
# entra=StringVar()
# sali=StringVar()
# horafre=StringVar()
# gruen=StringVar()

#---------funciones que obtienen datos-------------
# ideas para mañana, para escoger hora de entrada y grupo define funciones que agreguen elementos en una lista como  oper y al ultimo renombrala como tal, para la funcion de horas usar split con un str contodas las entradas de los dias y separar por a 

             






def asig(h1,h2,h3,h4):
  global llave
  llave="correcto"
  obti(h1,h2,h3,h4)
  return obti(h1,h2,h3,h4)
  
  
vare() 

llave=1

def obti(h1,h2,h3,h4):
  vare()
  # for i in panti:
  
  #  i.set(str(i.get().replace("/","")))
  global h8,operan,oper,llave
  if llave =="correcto":  
   
   if str(h8)!="":
     operl=[[] for x in oper]
     operl[int(str(h8))]=operan[int(str(h8))]
     oper=operl
   elif str(h8)=="":
     oper=operan 
  
  llave=1
  #-----------------funcion que selecciona grupos-------
  def grupodes(j):
   oper12=[[] for x in oper8]
   if str(j)!="":
     for i9 in oper8:
       for u9 in i9:
         for op1 in range(len(u9)):
           if op1%2==0:
             if u9[op1]==j:
               oper12[oper8.index(i9)].append(u9)
   else:
     oper12=oper8
   return(oper12) 



 #----------------------funcion que busca horas-----
  def horaensa(p,r):
   if str(p)!="" and str(r)=="":
    r=24
   if str(r)!="" and str(p)=="":
    p=6
   
   global oper 
   oper13=[[] for xu in oper]
   if str(p)!="" and str(r)!="":
     for i9 in oper:
       for u9 in i9:
         #hasta u9 son una combinacion
         v5=""
         for op1 in range(len(u9)):
           if op1%2==1:
            
             for lup in u9[op1]:
               if v5!="":
                v5=v5+"a"+lup
               elif v5=="":
                 v5=lup 

         v6=v5.split("a")
         for ñp in range(len(v6)):
          
           v6[ñp]=float(v6[ñp].replace(":30",".3"))
        
         while min(v6)==0:
           v6.remove(0)    

         if min(v6)>=float(str(p)) and max(v6)<=float(str(r)):
           oper13[oper.index(i9)].append(u9) 
  
   else:
     oper13=oper
  
   return(oper13)  
  
 #---------------variables con funciones llamadas---


  # h1=entradas
  # h2=salidas

  oper8=horaensa(str(h1),str(h2))
  
  # h3=libres

  h8=h3

  # h4=grupos
  
  oper9=grupodes(str(h4))
  operan=oper9
  #-----------------------codigo que imprime en Text-----
  if str(h3)!="": 
   resul=(" Tambien existen combinaciones con las siguientes horas libres:"+x4+"\n"+"El numero de combinaciones encontradas con datos ingresados son:"+str(len(oper9[int(str(h3))]))+"\n"+"num_Grupos   Materia     Profesor    dia_lunes  dia_martes   dia_miercoles      dia_jueves   dia_viernes    dia_sábado"+"\n"+"."+"\n"+impi1(oper9[int(str(h3))])+"\n"*8)
   

  elif str(h3)=="":
    h98=""
    for jut in range(len(oper9)):
      if len(oper9[jut])!=0:
       h98=h98+"\n"+"."+"\n"+"Horas libres:"+str(jut)+"     numero de combinaciones:"+str(len(oper9[jut]))+"\n"+"num_Grupos   Materia     Profesor    dia_lunes  dia_martes   dia_miercoles      dia_jueves   dia_viernes    dia_sábado"+"\n"+impi1(oper9[jut])
    x58=""  
    for w1 in range(len(oper9)):
      if oper9[w1]!=[]:
        x58=x58+","+str(w1)

    resul=("Las horas libres de las combinaciones son:"+x58+"\n"+h98+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n") 

  resure=[]
  pri1=0
  while resul.find("  ")!=-1:
    resul=resul.replace("  "," ")
  resul=resul.replace(" "," ")
  resul=resul.replace(("\n"),("\n"+" "+"\n"))
  resure=resul.split("\n")
  for r in range(len(resure)):
    resure[r]=resure[r].split(" ")
    while " " in resure[r]:
       resure.remove(" ")
     

  # for i in range(resul.count("\n")):
  #   resure.append(resul[pri1:resul.find("\n")])
  #   pri1=resul.find("\n")+2

  #   resul=resul[pri1:]


  return resure    

    
#-----------funciones de numeros------
# panti=[entradas,salidas,libres,grupos]
# panta=0
# def aqui(j):
#   global panta
#   panta=int(j)
#   if str(panti[panta].get()).find("/")<0:
#    panti[panta].set(panti[panta].get()+"/")
#   for i in panti:
#     if i!=panti[panta]:
#       i.set(str(i.get().replace("/","")))

# def pri(j):
  
#  panti[panta].set(str(panti[panta].get()).replace("/","")+j)

# def ente():
#   global panta
#   panta=(panta+1)%4
#   panti[panta].set(panti[panta].get()+"/")
#   for i in panti:
#     if i!=panti[panta]:
#       i.set(str(i.get().replace("/","")))

  



# def del1():
#   panti[panta].set(str(panti[panta].get()).replace("/",""))
#   upo=panti[panta]
#   loi=upo.get()
#   yu=str(loi)
#   if len(yu)<=1:
#     ji=""
#   else:
#     ji=yu[0:len(yu)-1]  
#   upo.set(ji)

  





     
  
  

# #------------primera linea--------------------
# prese=Label(mifr,text="    Bienvenido para obtener las combinaciones digita la hora de inicio del horario final            ")
# prese.grid(row=0,column=0,columnspan=5)

# prese1=Label(mifr,text=" y la cantidad de horas libres que desees si adicionalmente quieres buscar algun grupo insertelo")
# prese1.grid(row=1,column=0,columnspan=4)

# num1=Button(mifr,text="    1    ",command=lambda : pri("1"),height="2")
# num1.grid(row=4,column=7,rowspan=2,)
# num2=Button(mifr,text="    2    ",command=lambda : pri("2"),height=2)
# num2.grid(row=4,column=9,rowspan=2)
# num3=Button(mifr,text="    3    ",command=lambda : pri("3"),height=2)
# num3.grid(row=6,column=7,rowspan=2)

# #------------segunda linea-----------------------
# horae=Button(mifr,text="Hora de entrada: ",command=lambda : aqui("0"))
# horae.grid(row=2,column=0)
# horaen=Entry(mifr,textvariable=entra)
# horaen.grid(row=2,column=1)


# horasa=Button(mifr,text="Hora de salida",command=lambda : aqui("1"))
# horasa.grid(row=2,column=2)
# horasal=Entry(mifr,textvariable=sali)
# horasal.grid(row=2,column=3)


# num4=Button(mifr,text="    4    ",command=lambda : pri("4"),height=2)
# num4.grid(row=6,column=9,rowspan=2)
# num5=Button(mifr,text="    5    ",command=lambda : pri("5"),height=2)
# num5.grid(row=8,column=7,rowspan=2)
# num6=Button(mifr,text="    6    ",command=lambda : pri("6"),height=2)
# num6.grid(row=8,column=9,rowspan=2)

# #----------------tercera linea----------------
# fre=Button(mifr,text="Horas libres: ",command= lambda:aqui("2"))
# fre.grid(row=3,column=0)
# freh=Entry(mifr,textvariable=horafre)
# freh.grid(row=3,column=1)

# fin=Button(mifr,text="Grupo: ",command=lambda:aqui("3"))
# fin.grid(row=3,column=2)
# fing=Entry(mifr,textvariable=gruen)
# fing.grid(row=3,column=3)


# num7=Button(mifr,text="    7    ",command=lambda : pri("7"),height=2)
# num7.grid(row=10,column=7,rowspan=2)
# num8=Button(mifr,text="    8    ",command=lambda : pri("8"),height=2)
# num8.grid(row=10,column=9,rowspan=2)
# num9=Button(mifr,text="    9    ",command=lambda : pri("9"),height=2)
# num9.grid(row=12,column=7,rowspan=2)
# #-------------------cuarta linea----------------------

# num0=Button(mifr,text="    0    ",command=lambda : pri("0"),height=2)
# num0.grid(row=12,column=9,rowspan=2)
# nume=Button(mifr,text=" enter ",command=lambda : ente(),height=2)
# nume.grid(row=14,column=7,rowspan=2)
# numde=Button(mifr,text="  del  ",command=lambda : del1(),height=2)
# numde.grid(row=14,column=9,rowspan=2)




# obt=Button(mifr,text="Obtener las combinaciones",command=obti)
# obt.grid(row=4,column=0,columnspan=2)
# #---------------------Boton 2---------------------
# repet=Button(mifr,text="Buscar en la anterior lista",command=asig)
# repet.grid(row=4,column=2,columnspan=2)

# #-----------------Quinta linea------------------------
# resul=Text(mifr,height=22)
# resul.grid(row=5,column=0,columnspan=4,rowspan=12)
# #resul.insert("insert","hola mundo")

# scrog=Button(mifr)
# scrog.grid(row=4,column=5)
# scro=Scrollbar(mifr,command=resul.yview)
# scro.grid(row=5,column=5,sticky="nsew",rowspan=7)
# resul.config(yscrollcommand=scro.set)




#scro2 = Scrollbar(mifr, orient='horizontal',command=resul.xview)
#scro2.grid(row=6,column=0,sticky="nsew")
#resul.config(xscrollcommand=scro2.set)



#---------------------base-----------------------------





def matriz1(i1):
  #print(i1)
  i=list(i1)
  for l in range(len(i)):
    if l%2==1:
      i[l]=list(i[l])

  h=[]
  for j in range(len(i)-1):
    
    if j%2==0:
      y=i[j+1]
      
      if int(i[j])!=i[j+1][0]:   
       y.insert(0,i[j])
      
      h.append(y)
  #print(h)
  def list7(k):
    for l in range(len(k)):
      if l>=1:
        if str(k[l])!="0":
         #print(k[l])
         if str(k[l]).find("a")>=0:
           h1=str(k[l].replace(":30",".3")).split("a")[1] 
         else:
           if len(str(k[l]).replace(":30",""))%2==1:
             h1=str(k[l])[1:len(k[l])]   
           if len(str(k[l]).replace(":30",""))%2==0:
             h1=str(k[l])[2:len(k[l])]  
    return float(h1.replace(":30",".3"))
  
  #for i9 in h:
   # print(list7(i9))
  h.sort(key=list7)



  

  for i3 in range(len(h)):
    for j3 in range(len(materias7)):
      if str(h[i3][0]) in materias7[j3]:
        h[i3].insert(1,materias51[j3])

  for i4 in range(len(h)):
    h[i4].insert(2,profes.get(str(h[i4][0])))    
  mil=[]
  #print(h)
  for i9 in range(len(h)):
    mil.append(len(h[i9][2]))
  for i4 in range(len(h)):
    h[i4][2]=h[i4][2]+" "*(max(mil)-len(h[i4][2]))


  auxi=[[] for xer in range(6)]
  

  for r in h:
    for r1 in range(len(r)):
      if r1>=3:
       auxi[r1-3].append(len(r[r1])) 
       
  for r in h:
    for r1 in range(len(r)):
      if r1>=3:
       
       r[r1]=" "*(max(auxi[r1-3])-len(str(r[r1])))+str(r[r1])
                 
            

   
  return h

    

def impi1(i):
  f2=""
  for l in range(len(i)):
  
    for ñ in matriz1(i[l]):
      f1=""
      for ñ1 in ñ:
        if f1=="":
          f1=str(ñ1)
        else:  
          f1=f1+"  "+str(ñ1)
      if f2=="":
        #print("paso una vez")
        f2=f1
      else:
        f2=f2+"\n"+f1    
    f2=f2+"\n"*2
  return(f2)   
#Texto que se encuentra al final
x4=""
for x in range(len(oper)):
  if oper[x]!=[]:
    if x4!="":
      x4=x4+","+str(x)
    else:
      x4=str(x)  


# ini.mainloop()
###

